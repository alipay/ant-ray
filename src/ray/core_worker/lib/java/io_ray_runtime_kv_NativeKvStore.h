// Copyright 2017 The Ray Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_ray_runtime_kv_NativeKvStore */

#ifndef _Included_io_ray_runtime_kv_NativeKvStore
#define _Included_io_ray_runtime_kv_NativeKvStore
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     io_ray_runtime_kv_NativeKvStore
 * Method:    nativePut
 * Signature: ([B[BZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_io_ray_runtime_kv_NativeKvStore_nativePut(
    JNIEnv *, jclass, jbyteArray, jbyteArray, jboolean, jboolean);

/*
 * Class:     io_ray_runtime_kv_NativeKvStore
 * Method:    nativeGet
 * Signature: ([BZ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_io_ray_runtime_kv_NativeKvStore_nativeGet(JNIEnv *,
                                                                            jclass,
                                                                            jbyteArray,
                                                                            jboolean);

/*
 * Class:     io_ray_runtime_kv_NativeKvStore
 * Method:    nativeExists
 * Signature: ([BZ)Z
 */
JNIEXPORT jboolean JNICALL Java_io_ray_runtime_kv_NativeKvStore_nativeExists(JNIEnv *,
                                                                             jclass,
                                                                             jbyteArray,
                                                                             jboolean);

/*
 * Class:     io_ray_runtime_kv_NativeKvStore
 * Method:    nativeDelete
 * Signature: ([BZ)Z
 */
JNIEXPORT jboolean JNICALL Java_io_ray_runtime_kv_NativeKvStore_nativeDelete(JNIEnv *,
                                                                             jclass,
                                                                             jbyteArray,
                                                                             jboolean);

#ifdef __cplusplus
}
#endif
#endif
