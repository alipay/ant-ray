syntax = "proto3";

package ray.rpc;

message ObjectInfo {
  // Object ID of this object.
  bytes object_id = 1;
  // Number of bytes the content of this object occupies in memory.
  uint64 data_size = 2;
  // Number of bytes the metadata of this object occupies in memory.
  uint64 metadata_size = 3;
  // Number of clients using the objects.
  int32 ref_count = 4;
  // Unix epoch of when this object was created.
  uint64 create_time = 5;
  // How long creation of this object took.
  uint64 construct_duration = 6;
  // Hash of the object content. If the object is not sealed yet this is
  // an empty bytes.
  bytes digest = 7;
  // Specifies if this object was deleted or added.
  bool is_deletion = 8;
}

message PushRequest {
  // The push ID to allow the receiver to differentiate different push attempts
  // from the same sender.
  bytes push_id = 1;
  // The object ID being transferred.
  bytes object_id = 2;
  // The client ID of client sending this object
  bytes client_id = 3;
  // The index of the chunk being transferred.
  uint32 chunk_index = 4;
  // The data_size include object_size and metadata_size
  uint64 data_size = 5;
  // The metadata size.
  uint64 metadata_size = 6;
  // The chunk data
  bytes data = 7;
}

message PullRequest {
  // ID of the requesting client.
  bytes client_id = 1;
  // Requested ObjectID.
  bytes object_id = 2;
}

message FreeObjectsRequest {
  repeated bytes object_ids = 1;
}

message PushReply {
}
message PullReply {
}
message FreeObjectsReply {
}

service ObjectManagerService {
  rpc Push(PushRequest) returns (PushReply);
  rpc Pull(PullRequest) returns (PullReply);
  rpc FreeObjects(FreeObjectsRequest) returns (FreeObjectsReply);
}
