syntax = "proto3";

package ray.rpc;

import "src/ray/protobuf/common.proto";

message AssignTaskRequest {
  // The task to be pushed.
  Task task = 1;
  // A list of the resources reserved for this worker.
  repeated ResourceIdSetInfo resource_ids = 2;
}

message AssignTaskReply {
}

// Service for worker.
service WorkerTaskService {
  // Push a task to a worker.
  rpc AssignTask(AssignTaskRequest) returns (AssignTaskReply);
}

// This enum is needed by asio based rpc. For each method in the rpc service,
// a message type needs to be defined for the corresponding request in that
// method, so that receiver side can figure out the exact request message
// based on this type, deserialize it accordingly, and invoke the corresponding
// method.
enum WorkerTaskServiceMessageType {
  // `ConnectClient` and `DisconnectClient` MUST be defined and their values
  // MUST be consistent with the ones in `ServiceMessageType` in 
  // "src/ray/protobuf/asio.proto".
  WorkerConnectClient = 0;
  WorkerDisconnectClient = 1;
  // Push task request.
  AssignTaskRequestMessage = 2;
  // Push task reply.
  AssignTaskReplytMessage = 3;
}
