syntax = "proto3";

package ray.rpc;

message PushTaskRequest {
  // The ID of the task to be pushed.
  bytes task_id = 1;
  // The task to be pushed. This should include task_id.
  // TODO(hchen): Currently, `task_spec` are represented as
  // flatbutters-serialized bytes. This is because the flatbuffers-defined Task data
  // structure is being used in many places. We should move Task and all related data
  // strucutres to protobuf.
  bytes task_spec = 2;
}

message PushTaskReply {
}

// Service for worker.
service WorkerTaskService {
  // Push a task to a worker.
  rpc PushTask(PushTaskRequest) returns (PushTaskReply);
}

// TODO(zhijunfu): we should consider to add another namespace in addition to
// ray.rpc to avoid naming confliction, so that different services can define
// there own requests/responses without worrying about conflictions.
// e.g. `DirectActorService` can have its own PushTaskRequest/PushTaskReply.

// Service for direct actor.
service DirectActorService {
  // Push a task to a worker.
  rpc PushTask(PushTaskRequest) returns (PushTaskReply);
}