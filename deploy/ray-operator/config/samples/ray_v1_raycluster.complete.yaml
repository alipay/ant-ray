apiVersion: ray.io/v1
kind: RayCluster
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
    # An unique identifier for the head node and workers of this cluster.
  name: raycluster-sample
spec:
  # An unique identifier for the head node and workers of this cluster.
  clusterName: raycluster-sample
  images:
    defaultImage: "docker-image"
  imagePullPolicy: "Always"

  extensions:
    # the pod size in this group typed worker
    - size: 2
      # logical group name
      groupName: group1
      # pod type
      type: worker
      # final pod name, clusterName-groupName-type-index
      idList: ["raycluster-sample-group1-worker-0","raycluster-sample-group1-worker-1"]

      # custom labels. NOTE: do not define custom labels start with `raycluster.`, they may be used in controller.
      labels:
        raycluster.group.name: group1

      # use affinity to select nodes.Optional
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: key1
                    operator: In
                    values: ["true"]
                  - key: key2
                    operator: In
                    values: ["true"]

      # use tolerations to select nodes.Optional
      tolerations:
        - key: "key1"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

      # resource requirements
      resources:
        limits:
          cpu: 1000m
          memory: 2Gi
          ephemeral-storage: 2Gi
        requests:
          cpu: 1000m
          memory: 2Gi
          ephemeral-storage: 2Gi

      # environment variables to set in the container.Optional
      containerEnv:
        - name: APPNAME
          value: raycluster-sample
        - name: POD_READY_FILEPATH
          value: /path/to/log
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP

      # head service suffix: {namespace}.svc , follows Kubernetes standard
      headServiceSuffix: "ray-operator.svc"

      # use volumes.Optional
      volumes:
        - name: log-volume
          emptyDir: {}

      # use volumeMounts.Optional
      volumeMounts:
        - mountPath: /path/to/log
          name: log-volume

    # the pod size in this group typed worker
    - size: 1
      # logical group name
      groupName: group2
      # pod type
      type: worker
      # final pod name, clusterName-groupName-type-index
      idList: ["raycluster-sample-group2-worker-0"]

      # custom labels. NOTE: do not define custom labels start with `raycluster.`, they may be used in controller.
      labels:
        raycluster.group.name: group2

      # use affinity to select nodes.Optional
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: key1
                    operator: In
                    values: ["true"]
                  - key: key2
                    operator: In
                    values: ["true"]

      # use tolerations to select nodes.Optional
      tolerations:
        - key: "key1"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

      # resource requirements
      resources:
        limits:
          cpu: 2000m
          memory: 4Gi
          ephemeral-storage: 4Gi
        requests:
          cpu: 2000m
          memory: 4Gi
          ephemeral-storage: 4Gi

      # environment variables to set in the container.Optional
      containerEnv:
        - name: APPNAME
          value: raycluster-sample
        - name: POD_READY_FILEPATH
          value: /path/to/log
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP


      # head service suffix: {namespace}.svc , follows Kubernetes standard
      headServiceSuffix: "ray-operator.svc"

      # use volumes.Optional
      volumes:
        - name: log-volume
          emptyDir: {}

      # use volumeMounts.Optional
      volumeMounts:
        - mountPath: /path/to/log
          name: log-volume

    # the pod size in this group typed head
    - size: 1
      # logical group name
      groupName: headgroup
      # pod type
      type: head
      # final pod name, clusterName-groupName-type-index
      idList: ["raycluster-sample-headgroup-head-0"]

      # custom labels. NOTE: do not define custom labels start with `raycluster.`, they may be used in controller.
      labels:
        raycluster.group.name: headgroup

      # use affinity to select nodes.Optional
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: key1
                    operator: In
                    values: ["true"]
                  - key: key2
                    operator: In
                    values: ["true"]

      # use tolerations to select nodes.Optional
      tolerations:
        - key: "key1"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

      # resource requirements
      resources:
        limits:
          cpu: 1000m
          memory: 1Gi
          ephemeral-storage: 4Gi
        requests:
          cpu: 1000m
          memory: 1Gi
          ephemeral-storage: 4Gi

      # environment variables to set in the container.Optional
      containerEnv:
        - name: APPNAME
          value: raycluster-sample
        - name: POD_READY_FILEPATH
          value: /path/to/log
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP

      # head service suffix
      headServiceSuffix: "ray-operator.svc"

      # use volumes.Optional
      volumes:
        - name: log-volume
          emptyDir: {}

      # use volumeMounts.Optional
      volumeMounts:
        - mountPath: /path/to/log
          name: log-volume
