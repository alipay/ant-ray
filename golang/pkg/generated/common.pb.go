// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/ray/protobuf/common.proto

package ray_rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Language int32

const (
	Language_PYTHON Language = 0
	Language_JAVA   Language = 1
	Language_CPP    Language = 2
	Language_GOLANG Language = 3
)

var Language_name = map[int32]string{
	0: "PYTHON",
	1: "JAVA",
	2: "CPP",
	3: "GOLANG",
}

var Language_value = map[string]int32{
	"PYTHON": 0,
	"JAVA":   1,
	"CPP":    2,
	"GOLANG": 3,
}

func (x Language) String() string {
	return proto.EnumName(Language_name, int32(x))
}

func (Language) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{0}
}

type WorkerType int32

const (
	WorkerType_WORKER         WorkerType = 0
	WorkerType_DRIVER         WorkerType = 1
	WorkerType_SPILL_WORKER   WorkerType = 2
	WorkerType_RESTORE_WORKER WorkerType = 3
	WorkerType_UTIL_WORKER    WorkerType = 4
)

var WorkerType_name = map[int32]string{
	0: "WORKER",
	1: "DRIVER",
	2: "SPILL_WORKER",
	3: "RESTORE_WORKER",
	4: "UTIL_WORKER",
}

var WorkerType_value = map[string]int32{
	"WORKER":         0,
	"DRIVER":         1,
	"SPILL_WORKER":   2,
	"RESTORE_WORKER": 3,
	"UTIL_WORKER":    4,
}

func (x WorkerType) String() string {
	return proto.EnumName(WorkerType_name, int32(x))
}

func (WorkerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{1}
}

type TaskType int32

const (
	TaskType_NORMAL_TASK         TaskType = 0
	TaskType_ACTOR_CREATION_TASK TaskType = 1
	TaskType_ACTOR_TASK          TaskType = 2
	TaskType_DRIVER_TASK         TaskType = 3
)

var TaskType_name = map[int32]string{
	0: "NORMAL_TASK",
	1: "ACTOR_CREATION_TASK",
	2: "ACTOR_TASK",
	3: "DRIVER_TASK",
}

var TaskType_value = map[string]int32{
	"NORMAL_TASK":         0,
	"ACTOR_CREATION_TASK": 1,
	"ACTOR_TASK":          2,
	"DRIVER_TASK":         3,
}

func (x TaskType) String() string {
	return proto.EnumName(TaskType_name, int32(x))
}

func (TaskType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{2}
}

type ErrorType int32

const (
	ErrorType_WORKER_DIED              ErrorType = 0
	ErrorType_ACTOR_DIED               ErrorType = 1
	ErrorType_OBJECT_UNRECONSTRUCTABLE ErrorType = 2
	ErrorType_TASK_EXECUTION_EXCEPTION ErrorType = 3
	ErrorType_OBJECT_IN_PLASMA         ErrorType = 4
	ErrorType_TASK_CANCELLED           ErrorType = 5
	ErrorType_ACTOR_CREATION_FAILED    ErrorType = 6
	ErrorType_RUNTIME_ENV_SETUP_FAILED ErrorType = 7
)

var ErrorType_name = map[int32]string{
	0: "WORKER_DIED",
	1: "ACTOR_DIED",
	2: "OBJECT_UNRECONSTRUCTABLE",
	3: "TASK_EXECUTION_EXCEPTION",
	4: "OBJECT_IN_PLASMA",
	5: "TASK_CANCELLED",
	6: "ACTOR_CREATION_FAILED",
	7: "RUNTIME_ENV_SETUP_FAILED",
}

var ErrorType_value = map[string]int32{
	"WORKER_DIED":              0,
	"ACTOR_DIED":               1,
	"OBJECT_UNRECONSTRUCTABLE": 2,
	"TASK_EXECUTION_EXCEPTION": 3,
	"OBJECT_IN_PLASMA":         4,
	"TASK_CANCELLED":           5,
	"ACTOR_CREATION_FAILED":    6,
	"RUNTIME_ENV_SETUP_FAILED": 7,
}

func (x ErrorType) String() string {
	return proto.EnumName(ErrorType_name, int32(x))
}

func (ErrorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{3}
}

type WorkerExitType int32

const (
	WorkerExitType_SYSTEM_ERROR_EXIT        WorkerExitType = 0
	WorkerExitType_INTENDED_EXIT            WorkerExitType = 1
	WorkerExitType_UNUSED_RESOURCE_RELEASED WorkerExitType = 2
	WorkerExitType_PLACEMENT_GROUP_REMOVED  WorkerExitType = 3
	WorkerExitType_CREATION_TASK_ERROR      WorkerExitType = 4
	WorkerExitType_IDLE_EXIT                WorkerExitType = 5
)

var WorkerExitType_name = map[int32]string{
	0: "SYSTEM_ERROR_EXIT",
	1: "INTENDED_EXIT",
	2: "UNUSED_RESOURCE_RELEASED",
	3: "PLACEMENT_GROUP_REMOVED",
	4: "CREATION_TASK_ERROR",
	5: "IDLE_EXIT",
}

var WorkerExitType_value = map[string]int32{
	"SYSTEM_ERROR_EXIT":        0,
	"INTENDED_EXIT":            1,
	"UNUSED_RESOURCE_RELEASED": 2,
	"PLACEMENT_GROUP_REMOVED":  3,
	"CREATION_TASK_ERROR":      4,
	"IDLE_EXIT":                5,
}

func (x WorkerExitType) String() string {
	return proto.EnumName(WorkerExitType_name, int32(x))
}

func (WorkerExitType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{4}
}

type PlacementStrategy int32

const (
	PlacementStrategy_PACK          PlacementStrategy = 0
	PlacementStrategy_SPREAD        PlacementStrategy = 1
	PlacementStrategy_STRICT_PACK   PlacementStrategy = 2
	PlacementStrategy_STRICT_SPREAD PlacementStrategy = 3
)

var PlacementStrategy_name = map[int32]string{
	0: "PACK",
	1: "SPREAD",
	2: "STRICT_PACK",
	3: "STRICT_SPREAD",
}

var PlacementStrategy_value = map[string]int32{
	"PACK":          0,
	"SPREAD":        1,
	"STRICT_PACK":   2,
	"STRICT_SPREAD": 3,
}

func (x PlacementStrategy) String() string {
	return proto.EnumName(PlacementStrategy_name, int32(x))
}

func (PlacementStrategy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{5}
}

type Address struct {
	RayletId             []byte   `protobuf:"bytes,1,opt,name=raylet_id,json=rayletId,proto3" json:"raylet_id,omitempty"`
	IpAddress            string   `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	WorkerId             []byte   `protobuf:"bytes,4,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{0}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetRayletId() []byte {
	if m != nil {
		return m.RayletId
	}
	return nil
}

func (m *Address) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *Address) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Address) GetWorkerId() []byte {
	if m != nil {
		return m.WorkerId
	}
	return nil
}

type JavaFunctionDescriptor struct {
	ClassName            string   `protobuf:"bytes,1,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	FunctionName         string   `protobuf:"bytes,2,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	Signature            string   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JavaFunctionDescriptor) Reset()         { *m = JavaFunctionDescriptor{} }
func (m *JavaFunctionDescriptor) String() string { return proto.CompactTextString(m) }
func (*JavaFunctionDescriptor) ProtoMessage()    {}
func (*JavaFunctionDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{1}
}

func (m *JavaFunctionDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JavaFunctionDescriptor.Unmarshal(m, b)
}
func (m *JavaFunctionDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JavaFunctionDescriptor.Marshal(b, m, deterministic)
}
func (m *JavaFunctionDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JavaFunctionDescriptor.Merge(m, src)
}
func (m *JavaFunctionDescriptor) XXX_Size() int {
	return xxx_messageInfo_JavaFunctionDescriptor.Size(m)
}
func (m *JavaFunctionDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_JavaFunctionDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_JavaFunctionDescriptor proto.InternalMessageInfo

func (m *JavaFunctionDescriptor) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *JavaFunctionDescriptor) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

func (m *JavaFunctionDescriptor) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type PythonFunctionDescriptor struct {
	ModuleName           string   `protobuf:"bytes,1,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	FunctionName         string   `protobuf:"bytes,3,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	FunctionHash         string   `protobuf:"bytes,4,opt,name=function_hash,json=functionHash,proto3" json:"function_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PythonFunctionDescriptor) Reset()         { *m = PythonFunctionDescriptor{} }
func (m *PythonFunctionDescriptor) String() string { return proto.CompactTextString(m) }
func (*PythonFunctionDescriptor) ProtoMessage()    {}
func (*PythonFunctionDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{2}
}

func (m *PythonFunctionDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PythonFunctionDescriptor.Unmarshal(m, b)
}
func (m *PythonFunctionDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PythonFunctionDescriptor.Marshal(b, m, deterministic)
}
func (m *PythonFunctionDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PythonFunctionDescriptor.Merge(m, src)
}
func (m *PythonFunctionDescriptor) XXX_Size() int {
	return xxx_messageInfo_PythonFunctionDescriptor.Size(m)
}
func (m *PythonFunctionDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_PythonFunctionDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_PythonFunctionDescriptor proto.InternalMessageInfo

func (m *PythonFunctionDescriptor) GetModuleName() string {
	if m != nil {
		return m.ModuleName
	}
	return ""
}

func (m *PythonFunctionDescriptor) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *PythonFunctionDescriptor) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

func (m *PythonFunctionDescriptor) GetFunctionHash() string {
	if m != nil {
		return m.FunctionHash
	}
	return ""
}

type CppFunctionDescriptor struct {
	FunctionName         string   `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CppFunctionDescriptor) Reset()         { *m = CppFunctionDescriptor{} }
func (m *CppFunctionDescriptor) String() string { return proto.CompactTextString(m) }
func (*CppFunctionDescriptor) ProtoMessage()    {}
func (*CppFunctionDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{3}
}

func (m *CppFunctionDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CppFunctionDescriptor.Unmarshal(m, b)
}
func (m *CppFunctionDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CppFunctionDescriptor.Marshal(b, m, deterministic)
}
func (m *CppFunctionDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CppFunctionDescriptor.Merge(m, src)
}
func (m *CppFunctionDescriptor) XXX_Size() int {
	return xxx_messageInfo_CppFunctionDescriptor.Size(m)
}
func (m *CppFunctionDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_CppFunctionDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_CppFunctionDescriptor proto.InternalMessageInfo

func (m *CppFunctionDescriptor) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

type FunctionDescriptor struct {
	// Types that are valid to be assigned to FunctionDescriptor:
	//	*FunctionDescriptor_JavaFunctionDescriptor
	//	*FunctionDescriptor_PythonFunctionDescriptor
	//	*FunctionDescriptor_CppFunctionDescriptor
	FunctionDescriptor   isFunctionDescriptor_FunctionDescriptor `protobuf_oneof:"function_descriptor"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *FunctionDescriptor) Reset()         { *m = FunctionDescriptor{} }
func (m *FunctionDescriptor) String() string { return proto.CompactTextString(m) }
func (*FunctionDescriptor) ProtoMessage()    {}
func (*FunctionDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{4}
}

func (m *FunctionDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionDescriptor.Unmarshal(m, b)
}
func (m *FunctionDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionDescriptor.Marshal(b, m, deterministic)
}
func (m *FunctionDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionDescriptor.Merge(m, src)
}
func (m *FunctionDescriptor) XXX_Size() int {
	return xxx_messageInfo_FunctionDescriptor.Size(m)
}
func (m *FunctionDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionDescriptor proto.InternalMessageInfo

type isFunctionDescriptor_FunctionDescriptor interface {
	isFunctionDescriptor_FunctionDescriptor()
}

type FunctionDescriptor_JavaFunctionDescriptor struct {
	JavaFunctionDescriptor *JavaFunctionDescriptor `protobuf:"bytes,1,opt,name=java_function_descriptor,json=javaFunctionDescriptor,proto3,oneof"`
}

type FunctionDescriptor_PythonFunctionDescriptor struct {
	PythonFunctionDescriptor *PythonFunctionDescriptor `protobuf:"bytes,2,opt,name=python_function_descriptor,json=pythonFunctionDescriptor,proto3,oneof"`
}

type FunctionDescriptor_CppFunctionDescriptor struct {
	CppFunctionDescriptor *CppFunctionDescriptor `protobuf:"bytes,3,opt,name=cpp_function_descriptor,json=cppFunctionDescriptor,proto3,oneof"`
}

func (*FunctionDescriptor_JavaFunctionDescriptor) isFunctionDescriptor_FunctionDescriptor() {}

func (*FunctionDescriptor_PythonFunctionDescriptor) isFunctionDescriptor_FunctionDescriptor() {}

func (*FunctionDescriptor_CppFunctionDescriptor) isFunctionDescriptor_FunctionDescriptor() {}

func (m *FunctionDescriptor) GetFunctionDescriptor() isFunctionDescriptor_FunctionDescriptor {
	if m != nil {
		return m.FunctionDescriptor
	}
	return nil
}

func (m *FunctionDescriptor) GetJavaFunctionDescriptor() *JavaFunctionDescriptor {
	if x, ok := m.GetFunctionDescriptor().(*FunctionDescriptor_JavaFunctionDescriptor); ok {
		return x.JavaFunctionDescriptor
	}
	return nil
}

func (m *FunctionDescriptor) GetPythonFunctionDescriptor() *PythonFunctionDescriptor {
	if x, ok := m.GetFunctionDescriptor().(*FunctionDescriptor_PythonFunctionDescriptor); ok {
		return x.PythonFunctionDescriptor
	}
	return nil
}

func (m *FunctionDescriptor) GetCppFunctionDescriptor() *CppFunctionDescriptor {
	if x, ok := m.GetFunctionDescriptor().(*FunctionDescriptor_CppFunctionDescriptor); ok {
		return x.CppFunctionDescriptor
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FunctionDescriptor) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FunctionDescriptor_JavaFunctionDescriptor)(nil),
		(*FunctionDescriptor_PythonFunctionDescriptor)(nil),
		(*FunctionDescriptor_CppFunctionDescriptor)(nil),
	}
}

type RayException struct {
	Language                 Language `protobuf:"varint,1,opt,name=language,proto3,enum=ray.rpc.Language" json:"language,omitempty"`
	SerializedException      []byte   `protobuf:"bytes,2,opt,name=serialized_exception,json=serializedException,proto3" json:"serialized_exception,omitempty"`
	FormattedExceptionString string   `protobuf:"bytes,3,opt,name=formatted_exception_string,json=formattedExceptionString,proto3" json:"formatted_exception_string,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *RayException) Reset()         { *m = RayException{} }
func (m *RayException) String() string { return proto.CompactTextString(m) }
func (*RayException) ProtoMessage()    {}
func (*RayException) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{5}
}

func (m *RayException) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RayException.Unmarshal(m, b)
}
func (m *RayException) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RayException.Marshal(b, m, deterministic)
}
func (m *RayException) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RayException.Merge(m, src)
}
func (m *RayException) XXX_Size() int {
	return xxx_messageInfo_RayException.Size(m)
}
func (m *RayException) XXX_DiscardUnknown() {
	xxx_messageInfo_RayException.DiscardUnknown(m)
}

var xxx_messageInfo_RayException proto.InternalMessageInfo

func (m *RayException) GetLanguage() Language {
	if m != nil {
		return m.Language
	}
	return Language_PYTHON
}

func (m *RayException) GetSerializedException() []byte {
	if m != nil {
		return m.SerializedException
	}
	return nil
}

func (m *RayException) GetFormattedExceptionString() string {
	if m != nil {
		return m.FormattedExceptionString
	}
	return ""
}

type RuntimeEnv struct {
	RawJson              string   `protobuf:"bytes,1,opt,name=raw_json,json=rawJson,proto3" json:"raw_json,omitempty"`
	Uris                 []string `protobuf:"bytes,2,rep,name=uris,proto3" json:"uris,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuntimeEnv) Reset()         { *m = RuntimeEnv{} }
func (m *RuntimeEnv) String() string { return proto.CompactTextString(m) }
func (*RuntimeEnv) ProtoMessage()    {}
func (*RuntimeEnv) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{6}
}

func (m *RuntimeEnv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeEnv.Unmarshal(m, b)
}
func (m *RuntimeEnv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeEnv.Marshal(b, m, deterministic)
}
func (m *RuntimeEnv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeEnv.Merge(m, src)
}
func (m *RuntimeEnv) XXX_Size() int {
	return xxx_messageInfo_RuntimeEnv.Size(m)
}
func (m *RuntimeEnv) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeEnv.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeEnv proto.InternalMessageInfo

func (m *RuntimeEnv) GetRawJson() string {
	if m != nil {
		return m.RawJson
	}
	return ""
}

func (m *RuntimeEnv) GetUris() []string {
	if m != nil {
		return m.Uris
	}
	return nil
}

type TaskSpec struct {
	Type                            TaskType               `protobuf:"varint,1,opt,name=type,proto3,enum=ray.rpc.TaskType" json:"type,omitempty"`
	Name                            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Language                        Language               `protobuf:"varint,3,opt,name=language,proto3,enum=ray.rpc.Language" json:"language,omitempty"`
	FunctionDescriptor              *FunctionDescriptor    `protobuf:"bytes,4,opt,name=function_descriptor,json=functionDescriptor,proto3" json:"function_descriptor,omitempty"`
	JobId                           []byte                 `protobuf:"bytes,5,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	TaskId                          []byte                 `protobuf:"bytes,6,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ParentTaskId                    []byte                 `protobuf:"bytes,7,opt,name=parent_task_id,json=parentTaskId,proto3" json:"parent_task_id,omitempty"`
	ParentCounter                   uint64                 `protobuf:"varint,8,opt,name=parent_counter,json=parentCounter,proto3" json:"parent_counter,omitempty"`
	CallerId                        []byte                 `protobuf:"bytes,9,opt,name=caller_id,json=callerId,proto3" json:"caller_id,omitempty"`
	CallerAddress                   *Address               `protobuf:"bytes,10,opt,name=caller_address,json=callerAddress,proto3" json:"caller_address,omitempty"`
	Args                            []*TaskArg             `protobuf:"bytes,11,rep,name=args,proto3" json:"args,omitempty"`
	NumReturns                      uint64                 `protobuf:"varint,12,opt,name=num_returns,json=numReturns,proto3" json:"num_returns,omitempty"`
	RequiredResources               map[string]float64     `protobuf:"bytes,13,rep,name=required_resources,json=requiredResources,proto3" json:"required_resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	RequiredPlacementResources      map[string]float64     `protobuf:"bytes,14,rep,name=required_placement_resources,json=requiredPlacementResources,proto3" json:"required_placement_resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	ActorCreationTaskSpec           *ActorCreationTaskSpec `protobuf:"bytes,15,opt,name=actor_creation_task_spec,json=actorCreationTaskSpec,proto3" json:"actor_creation_task_spec,omitempty"`
	ActorTaskSpec                   *ActorTaskSpec         `protobuf:"bytes,16,opt,name=actor_task_spec,json=actorTaskSpec,proto3" json:"actor_task_spec,omitempty"`
	MaxRetries                      int32                  `protobuf:"varint,17,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	PlacementGroupId                []byte                 `protobuf:"bytes,18,opt,name=placement_group_id,json=placementGroupId,proto3" json:"placement_group_id,omitempty"`
	PlacementGroupBundleIndex       int64                  `protobuf:"varint,19,opt,name=placement_group_bundle_index,json=placementGroupBundleIndex,proto3" json:"placement_group_bundle_index,omitempty"`
	PlacementGroupCaptureChildTasks bool                   `protobuf:"varint,20,opt,name=placement_group_capture_child_tasks,json=placementGroupCaptureChildTasks,proto3" json:"placement_group_capture_child_tasks,omitempty"`
	OverrideEnvironmentVariables    map[string]string      `protobuf:"bytes,21,rep,name=override_environment_variables,json=overrideEnvironmentVariables,proto3" json:"override_environment_variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SkipExecution                   bool                   `protobuf:"varint,22,opt,name=skip_execution,json=skipExecution,proto3" json:"skip_execution,omitempty"`
	DebuggerBreakpoint              []byte                 `protobuf:"bytes,23,opt,name=debugger_breakpoint,json=debuggerBreakpoint,proto3" json:"debugger_breakpoint,omitempty"`
	SerializedRuntimeEnv            string                 `protobuf:"bytes,24,opt,name=serialized_runtime_env,json=serializedRuntimeEnv,proto3" json:"serialized_runtime_env,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}               `json:"-"`
	XXX_unrecognized                []byte                 `json:"-"`
	XXX_sizecache                   int32                  `json:"-"`
}

func (m *TaskSpec) Reset()         { *m = TaskSpec{} }
func (m *TaskSpec) String() string { return proto.CompactTextString(m) }
func (*TaskSpec) ProtoMessage()    {}
func (*TaskSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{7}
}

func (m *TaskSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskSpec.Unmarshal(m, b)
}
func (m *TaskSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskSpec.Marshal(b, m, deterministic)
}
func (m *TaskSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskSpec.Merge(m, src)
}
func (m *TaskSpec) XXX_Size() int {
	return xxx_messageInfo_TaskSpec.Size(m)
}
func (m *TaskSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskSpec.DiscardUnknown(m)
}

var xxx_messageInfo_TaskSpec proto.InternalMessageInfo

func (m *TaskSpec) GetType() TaskType {
	if m != nil {
		return m.Type
	}
	return TaskType_NORMAL_TASK
}

func (m *TaskSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskSpec) GetLanguage() Language {
	if m != nil {
		return m.Language
	}
	return Language_PYTHON
}

func (m *TaskSpec) GetFunctionDescriptor() *FunctionDescriptor {
	if m != nil {
		return m.FunctionDescriptor
	}
	return nil
}

func (m *TaskSpec) GetJobId() []byte {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *TaskSpec) GetTaskId() []byte {
	if m != nil {
		return m.TaskId
	}
	return nil
}

func (m *TaskSpec) GetParentTaskId() []byte {
	if m != nil {
		return m.ParentTaskId
	}
	return nil
}

func (m *TaskSpec) GetParentCounter() uint64 {
	if m != nil {
		return m.ParentCounter
	}
	return 0
}

func (m *TaskSpec) GetCallerId() []byte {
	if m != nil {
		return m.CallerId
	}
	return nil
}

func (m *TaskSpec) GetCallerAddress() *Address {
	if m != nil {
		return m.CallerAddress
	}
	return nil
}

func (m *TaskSpec) GetArgs() []*TaskArg {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *TaskSpec) GetNumReturns() uint64 {
	if m != nil {
		return m.NumReturns
	}
	return 0
}

func (m *TaskSpec) GetRequiredResources() map[string]float64 {
	if m != nil {
		return m.RequiredResources
	}
	return nil
}

func (m *TaskSpec) GetRequiredPlacementResources() map[string]float64 {
	if m != nil {
		return m.RequiredPlacementResources
	}
	return nil
}

func (m *TaskSpec) GetActorCreationTaskSpec() *ActorCreationTaskSpec {
	if m != nil {
		return m.ActorCreationTaskSpec
	}
	return nil
}

func (m *TaskSpec) GetActorTaskSpec() *ActorTaskSpec {
	if m != nil {
		return m.ActorTaskSpec
	}
	return nil
}

func (m *TaskSpec) GetMaxRetries() int32 {
	if m != nil {
		return m.MaxRetries
	}
	return 0
}

func (m *TaskSpec) GetPlacementGroupId() []byte {
	if m != nil {
		return m.PlacementGroupId
	}
	return nil
}

func (m *TaskSpec) GetPlacementGroupBundleIndex() int64 {
	if m != nil {
		return m.PlacementGroupBundleIndex
	}
	return 0
}

func (m *TaskSpec) GetPlacementGroupCaptureChildTasks() bool {
	if m != nil {
		return m.PlacementGroupCaptureChildTasks
	}
	return false
}

func (m *TaskSpec) GetOverrideEnvironmentVariables() map[string]string {
	if m != nil {
		return m.OverrideEnvironmentVariables
	}
	return nil
}

func (m *TaskSpec) GetSkipExecution() bool {
	if m != nil {
		return m.SkipExecution
	}
	return false
}

func (m *TaskSpec) GetDebuggerBreakpoint() []byte {
	if m != nil {
		return m.DebuggerBreakpoint
	}
	return nil
}

func (m *TaskSpec) GetSerializedRuntimeEnv() string {
	if m != nil {
		return m.SerializedRuntimeEnv
	}
	return ""
}

type Bundle struct {
	BundleId             *Bundle_BundleIdentifier `protobuf:"bytes,1,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	UnitResources        map[string]float64       `protobuf:"bytes,2,rep,name=unit_resources,json=unitResources,proto3" json:"unit_resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	NodeId               []byte                   `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Bundle) Reset()         { *m = Bundle{} }
func (m *Bundle) String() string { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()    {}
func (*Bundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{8}
}

func (m *Bundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle.Unmarshal(m, b)
}
func (m *Bundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle.Marshal(b, m, deterministic)
}
func (m *Bundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle.Merge(m, src)
}
func (m *Bundle) XXX_Size() int {
	return xxx_messageInfo_Bundle.Size(m)
}
func (m *Bundle) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle proto.InternalMessageInfo

func (m *Bundle) GetBundleId() *Bundle_BundleIdentifier {
	if m != nil {
		return m.BundleId
	}
	return nil
}

func (m *Bundle) GetUnitResources() map[string]float64 {
	if m != nil {
		return m.UnitResources
	}
	return nil
}

func (m *Bundle) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type Bundle_BundleIdentifier struct {
	PlacementGroupId     []byte   `protobuf:"bytes,1,opt,name=placement_group_id,json=placementGroupId,proto3" json:"placement_group_id,omitempty"`
	BundleIndex          int32    `protobuf:"varint,2,opt,name=bundle_index,json=bundleIndex,proto3" json:"bundle_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bundle_BundleIdentifier) Reset()         { *m = Bundle_BundleIdentifier{} }
func (m *Bundle_BundleIdentifier) String() string { return proto.CompactTextString(m) }
func (*Bundle_BundleIdentifier) ProtoMessage()    {}
func (*Bundle_BundleIdentifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{8, 0}
}

func (m *Bundle_BundleIdentifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle_BundleIdentifier.Unmarshal(m, b)
}
func (m *Bundle_BundleIdentifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle_BundleIdentifier.Marshal(b, m, deterministic)
}
func (m *Bundle_BundleIdentifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle_BundleIdentifier.Merge(m, src)
}
func (m *Bundle_BundleIdentifier) XXX_Size() int {
	return xxx_messageInfo_Bundle_BundleIdentifier.Size(m)
}
func (m *Bundle_BundleIdentifier) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle_BundleIdentifier.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle_BundleIdentifier proto.InternalMessageInfo

func (m *Bundle_BundleIdentifier) GetPlacementGroupId() []byte {
	if m != nil {
		return m.PlacementGroupId
	}
	return nil
}

func (m *Bundle_BundleIdentifier) GetBundleIndex() int32 {
	if m != nil {
		return m.BundleIndex
	}
	return 0
}

type PlacementGroupSpec struct {
	PlacementGroupId     []byte            `protobuf:"bytes,1,opt,name=placement_group_id,json=placementGroupId,proto3" json:"placement_group_id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Bundles              []*Bundle         `protobuf:"bytes,3,rep,name=bundles,proto3" json:"bundles,omitempty"`
	Strategy             PlacementStrategy `protobuf:"varint,4,opt,name=strategy,proto3,enum=ray.rpc.PlacementStrategy" json:"strategy,omitempty"`
	CreatorJobId         []byte            `protobuf:"bytes,5,opt,name=creator_job_id,json=creatorJobId,proto3" json:"creator_job_id,omitempty"`
	CreatorActorId       []byte            `protobuf:"bytes,6,opt,name=creator_actor_id,json=creatorActorId,proto3" json:"creator_actor_id,omitempty"`
	CreatorJobDead       bool              `protobuf:"varint,7,opt,name=creator_job_dead,json=creatorJobDead,proto3" json:"creator_job_dead,omitempty"`
	CreatorActorDead     bool              `protobuf:"varint,8,opt,name=creator_actor_dead,json=creatorActorDead,proto3" json:"creator_actor_dead,omitempty"`
	IsDetached           bool              `protobuf:"varint,9,opt,name=is_detached,json=isDetached,proto3" json:"is_detached,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PlacementGroupSpec) Reset()         { *m = PlacementGroupSpec{} }
func (m *PlacementGroupSpec) String() string { return proto.CompactTextString(m) }
func (*PlacementGroupSpec) ProtoMessage()    {}
func (*PlacementGroupSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{9}
}

func (m *PlacementGroupSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlacementGroupSpec.Unmarshal(m, b)
}
func (m *PlacementGroupSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlacementGroupSpec.Marshal(b, m, deterministic)
}
func (m *PlacementGroupSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlacementGroupSpec.Merge(m, src)
}
func (m *PlacementGroupSpec) XXX_Size() int {
	return xxx_messageInfo_PlacementGroupSpec.Size(m)
}
func (m *PlacementGroupSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PlacementGroupSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PlacementGroupSpec proto.InternalMessageInfo

func (m *PlacementGroupSpec) GetPlacementGroupId() []byte {
	if m != nil {
		return m.PlacementGroupId
	}
	return nil
}

func (m *PlacementGroupSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlacementGroupSpec) GetBundles() []*Bundle {
	if m != nil {
		return m.Bundles
	}
	return nil
}

func (m *PlacementGroupSpec) GetStrategy() PlacementStrategy {
	if m != nil {
		return m.Strategy
	}
	return PlacementStrategy_PACK
}

func (m *PlacementGroupSpec) GetCreatorJobId() []byte {
	if m != nil {
		return m.CreatorJobId
	}
	return nil
}

func (m *PlacementGroupSpec) GetCreatorActorId() []byte {
	if m != nil {
		return m.CreatorActorId
	}
	return nil
}

func (m *PlacementGroupSpec) GetCreatorJobDead() bool {
	if m != nil {
		return m.CreatorJobDead
	}
	return false
}

func (m *PlacementGroupSpec) GetCreatorActorDead() bool {
	if m != nil {
		return m.CreatorActorDead
	}
	return false
}

func (m *PlacementGroupSpec) GetIsDetached() bool {
	if m != nil {
		return m.IsDetached
	}
	return false
}

type ObjectReference struct {
	ObjectId             []byte   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	OwnerAddress         *Address `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectReference) Reset()         { *m = ObjectReference{} }
func (m *ObjectReference) String() string { return proto.CompactTextString(m) }
func (*ObjectReference) ProtoMessage()    {}
func (*ObjectReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{10}
}

func (m *ObjectReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectReference.Unmarshal(m, b)
}
func (m *ObjectReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectReference.Marshal(b, m, deterministic)
}
func (m *ObjectReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectReference.Merge(m, src)
}
func (m *ObjectReference) XXX_Size() int {
	return xxx_messageInfo_ObjectReference.Size(m)
}
func (m *ObjectReference) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectReference.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectReference proto.InternalMessageInfo

func (m *ObjectReference) GetObjectId() []byte {
	if m != nil {
		return m.ObjectId
	}
	return nil
}

func (m *ObjectReference) GetOwnerAddress() *Address {
	if m != nil {
		return m.OwnerAddress
	}
	return nil
}

type ObjectReferenceCount struct {
	Reference             *ObjectReference   `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	HasLocalRef           bool               `protobuf:"varint,2,opt,name=has_local_ref,json=hasLocalRef,proto3" json:"has_local_ref,omitempty"`
	Borrowers             []*Address         `protobuf:"bytes,3,rep,name=borrowers,proto3" json:"borrowers,omitempty"`
	StoredInObjects       []*ObjectReference `protobuf:"bytes,4,rep,name=stored_in_objects,json=storedInObjects,proto3" json:"stored_in_objects,omitempty"`
	ContainedInBorrowedId []byte             `protobuf:"bytes,5,opt,name=contained_in_borrowed_id,json=containedInBorrowedId,proto3" json:"contained_in_borrowed_id,omitempty"`
	Contains              [][]byte           `protobuf:"bytes,6,rep,name=contains,proto3" json:"contains,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}           `json:"-"`
	XXX_unrecognized      []byte             `json:"-"`
	XXX_sizecache         int32              `json:"-"`
}

func (m *ObjectReferenceCount) Reset()         { *m = ObjectReferenceCount{} }
func (m *ObjectReferenceCount) String() string { return proto.CompactTextString(m) }
func (*ObjectReferenceCount) ProtoMessage()    {}
func (*ObjectReferenceCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{11}
}

func (m *ObjectReferenceCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectReferenceCount.Unmarshal(m, b)
}
func (m *ObjectReferenceCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectReferenceCount.Marshal(b, m, deterministic)
}
func (m *ObjectReferenceCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectReferenceCount.Merge(m, src)
}
func (m *ObjectReferenceCount) XXX_Size() int {
	return xxx_messageInfo_ObjectReferenceCount.Size(m)
}
func (m *ObjectReferenceCount) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectReferenceCount.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectReferenceCount proto.InternalMessageInfo

func (m *ObjectReferenceCount) GetReference() *ObjectReference {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *ObjectReferenceCount) GetHasLocalRef() bool {
	if m != nil {
		return m.HasLocalRef
	}
	return false
}

func (m *ObjectReferenceCount) GetBorrowers() []*Address {
	if m != nil {
		return m.Borrowers
	}
	return nil
}

func (m *ObjectReferenceCount) GetStoredInObjects() []*ObjectReference {
	if m != nil {
		return m.StoredInObjects
	}
	return nil
}

func (m *ObjectReferenceCount) GetContainedInBorrowedId() []byte {
	if m != nil {
		return m.ContainedInBorrowedId
	}
	return nil
}

func (m *ObjectReferenceCount) GetContains() [][]byte {
	if m != nil {
		return m.Contains
	}
	return nil
}

type TaskArg struct {
	ObjectRef            *ObjectReference `protobuf:"bytes,1,opt,name=object_ref,json=objectRef,proto3" json:"object_ref,omitempty"`
	Data                 []byte           `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Metadata             []byte           `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NestedInlinedIds     [][]byte         `protobuf:"bytes,4,rep,name=nested_inlined_ids,json=nestedInlinedIds,proto3" json:"nested_inlined_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TaskArg) Reset()         { *m = TaskArg{} }
func (m *TaskArg) String() string { return proto.CompactTextString(m) }
func (*TaskArg) ProtoMessage()    {}
func (*TaskArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{12}
}

func (m *TaskArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskArg.Unmarshal(m, b)
}
func (m *TaskArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskArg.Marshal(b, m, deterministic)
}
func (m *TaskArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskArg.Merge(m, src)
}
func (m *TaskArg) XXX_Size() int {
	return xxx_messageInfo_TaskArg.Size(m)
}
func (m *TaskArg) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskArg.DiscardUnknown(m)
}

var xxx_messageInfo_TaskArg proto.InternalMessageInfo

func (m *TaskArg) GetObjectRef() *ObjectReference {
	if m != nil {
		return m.ObjectRef
	}
	return nil
}

func (m *TaskArg) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TaskArg) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *TaskArg) GetNestedInlinedIds() [][]byte {
	if m != nil {
		return m.NestedInlinedIds
	}
	return nil
}

type ActorCreationTaskSpec struct {
	ActorId               []byte   `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	MaxActorRestarts      int64    `protobuf:"varint,3,opt,name=max_actor_restarts,json=maxActorRestarts,proto3" json:"max_actor_restarts,omitempty"`
	MaxTaskRetries        int64    `protobuf:"varint,4,opt,name=max_task_retries,json=maxTaskRetries,proto3" json:"max_task_retries,omitempty"`
	DynamicWorkerOptions  []string `protobuf:"bytes,5,rep,name=dynamic_worker_options,json=dynamicWorkerOptions,proto3" json:"dynamic_worker_options,omitempty"`
	MaxConcurrency        int32    `protobuf:"varint,6,opt,name=max_concurrency,json=maxConcurrency,proto3" json:"max_concurrency,omitempty"`
	IsDetached            bool     `protobuf:"varint,7,opt,name=is_detached,json=isDetached,proto3" json:"is_detached,omitempty"`
	Name                  string   `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	RayNamespace          string   `protobuf:"bytes,9,opt,name=ray_namespace,json=rayNamespace,proto3" json:"ray_namespace,omitempty"`
	IsAsyncio             bool     `protobuf:"varint,10,opt,name=is_asyncio,json=isAsyncio,proto3" json:"is_asyncio,omitempty"`
	ExtensionData         string   `protobuf:"bytes,11,opt,name=extension_data,json=extensionData,proto3" json:"extension_data,omitempty"`
	SerializedActorHandle []byte   `protobuf:"bytes,12,opt,name=serialized_actor_handle,json=serializedActorHandle,proto3" json:"serialized_actor_handle,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ActorCreationTaskSpec) Reset()         { *m = ActorCreationTaskSpec{} }
func (m *ActorCreationTaskSpec) String() string { return proto.CompactTextString(m) }
func (*ActorCreationTaskSpec) ProtoMessage()    {}
func (*ActorCreationTaskSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{13}
}

func (m *ActorCreationTaskSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActorCreationTaskSpec.Unmarshal(m, b)
}
func (m *ActorCreationTaskSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActorCreationTaskSpec.Marshal(b, m, deterministic)
}
func (m *ActorCreationTaskSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActorCreationTaskSpec.Merge(m, src)
}
func (m *ActorCreationTaskSpec) XXX_Size() int {
	return xxx_messageInfo_ActorCreationTaskSpec.Size(m)
}
func (m *ActorCreationTaskSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ActorCreationTaskSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ActorCreationTaskSpec proto.InternalMessageInfo

func (m *ActorCreationTaskSpec) GetActorId() []byte {
	if m != nil {
		return m.ActorId
	}
	return nil
}

func (m *ActorCreationTaskSpec) GetMaxActorRestarts() int64 {
	if m != nil {
		return m.MaxActorRestarts
	}
	return 0
}

func (m *ActorCreationTaskSpec) GetMaxTaskRetries() int64 {
	if m != nil {
		return m.MaxTaskRetries
	}
	return 0
}

func (m *ActorCreationTaskSpec) GetDynamicWorkerOptions() []string {
	if m != nil {
		return m.DynamicWorkerOptions
	}
	return nil
}

func (m *ActorCreationTaskSpec) GetMaxConcurrency() int32 {
	if m != nil {
		return m.MaxConcurrency
	}
	return 0
}

func (m *ActorCreationTaskSpec) GetIsDetached() bool {
	if m != nil {
		return m.IsDetached
	}
	return false
}

func (m *ActorCreationTaskSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ActorCreationTaskSpec) GetRayNamespace() string {
	if m != nil {
		return m.RayNamespace
	}
	return ""
}

func (m *ActorCreationTaskSpec) GetIsAsyncio() bool {
	if m != nil {
		return m.IsAsyncio
	}
	return false
}

func (m *ActorCreationTaskSpec) GetExtensionData() string {
	if m != nil {
		return m.ExtensionData
	}
	return ""
}

func (m *ActorCreationTaskSpec) GetSerializedActorHandle() []byte {
	if m != nil {
		return m.SerializedActorHandle
	}
	return nil
}

type ActorTaskSpec struct {
	ActorId                        []byte   `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	ActorCreationDummyObjectId     []byte   `protobuf:"bytes,4,opt,name=actor_creation_dummy_object_id,json=actorCreationDummyObjectId,proto3" json:"actor_creation_dummy_object_id,omitempty"`
	ActorCounter                   uint64   `protobuf:"varint,5,opt,name=actor_counter,json=actorCounter,proto3" json:"actor_counter,omitempty"`
	PreviousActorTaskDummyObjectId []byte   `protobuf:"bytes,7,opt,name=previous_actor_task_dummy_object_id,json=previousActorTaskDummyObjectId,proto3" json:"previous_actor_task_dummy_object_id,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *ActorTaskSpec) Reset()         { *m = ActorTaskSpec{} }
func (m *ActorTaskSpec) String() string { return proto.CompactTextString(m) }
func (*ActorTaskSpec) ProtoMessage()    {}
func (*ActorTaskSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{14}
}

func (m *ActorTaskSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActorTaskSpec.Unmarshal(m, b)
}
func (m *ActorTaskSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActorTaskSpec.Marshal(b, m, deterministic)
}
func (m *ActorTaskSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActorTaskSpec.Merge(m, src)
}
func (m *ActorTaskSpec) XXX_Size() int {
	return xxx_messageInfo_ActorTaskSpec.Size(m)
}
func (m *ActorTaskSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ActorTaskSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ActorTaskSpec proto.InternalMessageInfo

func (m *ActorTaskSpec) GetActorId() []byte {
	if m != nil {
		return m.ActorId
	}
	return nil
}

func (m *ActorTaskSpec) GetActorCreationDummyObjectId() []byte {
	if m != nil {
		return m.ActorCreationDummyObjectId
	}
	return nil
}

func (m *ActorTaskSpec) GetActorCounter() uint64 {
	if m != nil {
		return m.ActorCounter
	}
	return 0
}

func (m *ActorTaskSpec) GetPreviousActorTaskDummyObjectId() []byte {
	if m != nil {
		return m.PreviousActorTaskDummyObjectId
	}
	return nil
}

type TaskExecutionSpec struct {
	LastTimestamp        float64  `protobuf:"fixed64,2,opt,name=last_timestamp,json=lastTimestamp,proto3" json:"last_timestamp,omitempty"`
	NumForwards          uint64   `protobuf:"varint,3,opt,name=num_forwards,json=numForwards,proto3" json:"num_forwards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskExecutionSpec) Reset()         { *m = TaskExecutionSpec{} }
func (m *TaskExecutionSpec) String() string { return proto.CompactTextString(m) }
func (*TaskExecutionSpec) ProtoMessage()    {}
func (*TaskExecutionSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{15}
}

func (m *TaskExecutionSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskExecutionSpec.Unmarshal(m, b)
}
func (m *TaskExecutionSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskExecutionSpec.Marshal(b, m, deterministic)
}
func (m *TaskExecutionSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskExecutionSpec.Merge(m, src)
}
func (m *TaskExecutionSpec) XXX_Size() int {
	return xxx_messageInfo_TaskExecutionSpec.Size(m)
}
func (m *TaskExecutionSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskExecutionSpec.DiscardUnknown(m)
}

var xxx_messageInfo_TaskExecutionSpec proto.InternalMessageInfo

func (m *TaskExecutionSpec) GetLastTimestamp() float64 {
	if m != nil {
		return m.LastTimestamp
	}
	return 0
}

func (m *TaskExecutionSpec) GetNumForwards() uint64 {
	if m != nil {
		return m.NumForwards
	}
	return 0
}

type Task struct {
	TaskSpec             *TaskSpec          `protobuf:"bytes,1,opt,name=task_spec,json=taskSpec,proto3" json:"task_spec,omitempty"`
	TaskExecutionSpec    *TaskExecutionSpec `protobuf:"bytes,2,opt,name=task_execution_spec,json=taskExecutionSpec,proto3" json:"task_execution_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{16}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetTaskSpec() *TaskSpec {
	if m != nil {
		return m.TaskSpec
	}
	return nil
}

func (m *Task) GetTaskExecutionSpec() *TaskExecutionSpec {
	if m != nil {
		return m.TaskExecutionSpec
	}
	return nil
}

type ResourceId struct {
	Index                int64    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Quantity             float64  `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceId) Reset()         { *m = ResourceId{} }
func (m *ResourceId) String() string { return proto.CompactTextString(m) }
func (*ResourceId) ProtoMessage()    {}
func (*ResourceId) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{17}
}

func (m *ResourceId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceId.Unmarshal(m, b)
}
func (m *ResourceId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceId.Marshal(b, m, deterministic)
}
func (m *ResourceId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceId.Merge(m, src)
}
func (m *ResourceId) XXX_Size() int {
	return xxx_messageInfo_ResourceId.Size(m)
}
func (m *ResourceId) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceId.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceId proto.InternalMessageInfo

func (m *ResourceId) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ResourceId) GetQuantity() float64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type ResourceMapEntry struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ResourceIds          []*ResourceId `protobuf:"bytes,2,rep,name=resource_ids,json=resourceIds,proto3" json:"resource_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ResourceMapEntry) Reset()         { *m = ResourceMapEntry{} }
func (m *ResourceMapEntry) String() string { return proto.CompactTextString(m) }
func (*ResourceMapEntry) ProtoMessage()    {}
func (*ResourceMapEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{18}
}

func (m *ResourceMapEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceMapEntry.Unmarshal(m, b)
}
func (m *ResourceMapEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceMapEntry.Marshal(b, m, deterministic)
}
func (m *ResourceMapEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceMapEntry.Merge(m, src)
}
func (m *ResourceMapEntry) XXX_Size() int {
	return xxx_messageInfo_ResourceMapEntry.Size(m)
}
func (m *ResourceMapEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceMapEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceMapEntry proto.InternalMessageInfo

func (m *ResourceMapEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResourceMapEntry) GetResourceIds() []*ResourceId {
	if m != nil {
		return m.ResourceIds
	}
	return nil
}

type ViewData struct {
	ViewName             string              `protobuf:"bytes,1,opt,name=view_name,json=viewName,proto3" json:"view_name,omitempty"`
	Measures             []*ViewData_Measure `protobuf:"bytes,2,rep,name=measures,proto3" json:"measures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ViewData) Reset()         { *m = ViewData{} }
func (m *ViewData) String() string { return proto.CompactTextString(m) }
func (*ViewData) ProtoMessage()    {}
func (*ViewData) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{19}
}

func (m *ViewData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewData.Unmarshal(m, b)
}
func (m *ViewData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewData.Marshal(b, m, deterministic)
}
func (m *ViewData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewData.Merge(m, src)
}
func (m *ViewData) XXX_Size() int {
	return xxx_messageInfo_ViewData.Size(m)
}
func (m *ViewData) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewData.DiscardUnknown(m)
}

var xxx_messageInfo_ViewData proto.InternalMessageInfo

func (m *ViewData) GetViewName() string {
	if m != nil {
		return m.ViewName
	}
	return ""
}

func (m *ViewData) GetMeasures() []*ViewData_Measure {
	if m != nil {
		return m.Measures
	}
	return nil
}

type ViewData_Measure struct {
	Tags                         string    `protobuf:"bytes,1,opt,name=tags,proto3" json:"tags,omitempty"`
	IntValue                     int64     `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3" json:"int_value,omitempty"`
	DoubleValue                  float64   `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,proto3" json:"double_value,omitempty"`
	DistributionMin              float64   `protobuf:"fixed64,4,opt,name=distribution_min,json=distributionMin,proto3" json:"distribution_min,omitempty"`
	DistributionMean             float64   `protobuf:"fixed64,5,opt,name=distribution_mean,json=distributionMean,proto3" json:"distribution_mean,omitempty"`
	DistributionMax              float64   `protobuf:"fixed64,6,opt,name=distribution_max,json=distributionMax,proto3" json:"distribution_max,omitempty"`
	DistributionCount            float64   `protobuf:"fixed64,7,opt,name=distribution_count,json=distributionCount,proto3" json:"distribution_count,omitempty"`
	DistributionBucketBoundaries []float64 `protobuf:"fixed64,8,rep,packed,name=distribution_bucket_boundaries,json=distributionBucketBoundaries,proto3" json:"distribution_bucket_boundaries,omitempty"`
	DistributionBucketCounts     []float64 `protobuf:"fixed64,9,rep,packed,name=distribution_bucket_counts,json=distributionBucketCounts,proto3" json:"distribution_bucket_counts,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}  `json:"-"`
	XXX_unrecognized             []byte    `json:"-"`
	XXX_sizecache                int32     `json:"-"`
}

func (m *ViewData_Measure) Reset()         { *m = ViewData_Measure{} }
func (m *ViewData_Measure) String() string { return proto.CompactTextString(m) }
func (*ViewData_Measure) ProtoMessage()    {}
func (*ViewData_Measure) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{19, 0}
}

func (m *ViewData_Measure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewData_Measure.Unmarshal(m, b)
}
func (m *ViewData_Measure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewData_Measure.Marshal(b, m, deterministic)
}
func (m *ViewData_Measure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewData_Measure.Merge(m, src)
}
func (m *ViewData_Measure) XXX_Size() int {
	return xxx_messageInfo_ViewData_Measure.Size(m)
}
func (m *ViewData_Measure) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewData_Measure.DiscardUnknown(m)
}

var xxx_messageInfo_ViewData_Measure proto.InternalMessageInfo

func (m *ViewData_Measure) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *ViewData_Measure) GetIntValue() int64 {
	if m != nil {
		return m.IntValue
	}
	return 0
}

func (m *ViewData_Measure) GetDoubleValue() float64 {
	if m != nil {
		return m.DoubleValue
	}
	return 0
}

func (m *ViewData_Measure) GetDistributionMin() float64 {
	if m != nil {
		return m.DistributionMin
	}
	return 0
}

func (m *ViewData_Measure) GetDistributionMean() float64 {
	if m != nil {
		return m.DistributionMean
	}
	return 0
}

func (m *ViewData_Measure) GetDistributionMax() float64 {
	if m != nil {
		return m.DistributionMax
	}
	return 0
}

func (m *ViewData_Measure) GetDistributionCount() float64 {
	if m != nil {
		return m.DistributionCount
	}
	return 0
}

func (m *ViewData_Measure) GetDistributionBucketBoundaries() []float64 {
	if m != nil {
		return m.DistributionBucketBoundaries
	}
	return nil
}

func (m *ViewData_Measure) GetDistributionBucketCounts() []float64 {
	if m != nil {
		return m.DistributionBucketCounts
	}
	return nil
}

type ObjectRefInfo struct {
	ObjectId              []byte   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	CallSite              string   `protobuf:"bytes,2,opt,name=call_site,json=callSite,proto3" json:"call_site,omitempty"`
	ObjectSize            int64    `protobuf:"varint,3,opt,name=object_size,json=objectSize,proto3" json:"object_size,omitempty"`
	LocalRefCount         int64    `protobuf:"varint,4,opt,name=local_ref_count,json=localRefCount,proto3" json:"local_ref_count,omitempty"`
	SubmittedTaskRefCount int64    `protobuf:"varint,5,opt,name=submitted_task_ref_count,json=submittedTaskRefCount,proto3" json:"submitted_task_ref_count,omitempty"`
	ContainedInOwned      [][]byte `protobuf:"bytes,6,rep,name=contained_in_owned,json=containedInOwned,proto3" json:"contained_in_owned,omitempty"`
	PinnedInMemory        bool     `protobuf:"varint,7,opt,name=pinned_in_memory,json=pinnedInMemory,proto3" json:"pinned_in_memory,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ObjectRefInfo) Reset()         { *m = ObjectRefInfo{} }
func (m *ObjectRefInfo) String() string { return proto.CompactTextString(m) }
func (*ObjectRefInfo) ProtoMessage()    {}
func (*ObjectRefInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{20}
}

func (m *ObjectRefInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectRefInfo.Unmarshal(m, b)
}
func (m *ObjectRefInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectRefInfo.Marshal(b, m, deterministic)
}
func (m *ObjectRefInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectRefInfo.Merge(m, src)
}
func (m *ObjectRefInfo) XXX_Size() int {
	return xxx_messageInfo_ObjectRefInfo.Size(m)
}
func (m *ObjectRefInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectRefInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectRefInfo proto.InternalMessageInfo

func (m *ObjectRefInfo) GetObjectId() []byte {
	if m != nil {
		return m.ObjectId
	}
	return nil
}

func (m *ObjectRefInfo) GetCallSite() string {
	if m != nil {
		return m.CallSite
	}
	return ""
}

func (m *ObjectRefInfo) GetObjectSize() int64 {
	if m != nil {
		return m.ObjectSize
	}
	return 0
}

func (m *ObjectRefInfo) GetLocalRefCount() int64 {
	if m != nil {
		return m.LocalRefCount
	}
	return 0
}

func (m *ObjectRefInfo) GetSubmittedTaskRefCount() int64 {
	if m != nil {
		return m.SubmittedTaskRefCount
	}
	return 0
}

func (m *ObjectRefInfo) GetContainedInOwned() [][]byte {
	if m != nil {
		return m.ContainedInOwned
	}
	return nil
}

func (m *ObjectRefInfo) GetPinnedInMemory() bool {
	if m != nil {
		return m.PinnedInMemory
	}
	return false
}

type ResourceAllocations struct {
	ResourceSlots        []*ResourceAllocations_ResourceSlot `protobuf:"bytes,1,rep,name=resource_slots,json=resourceSlots,proto3" json:"resource_slots,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ResourceAllocations) Reset()         { *m = ResourceAllocations{} }
func (m *ResourceAllocations) String() string { return proto.CompactTextString(m) }
func (*ResourceAllocations) ProtoMessage()    {}
func (*ResourceAllocations) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{21}
}

func (m *ResourceAllocations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceAllocations.Unmarshal(m, b)
}
func (m *ResourceAllocations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceAllocations.Marshal(b, m, deterministic)
}
func (m *ResourceAllocations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceAllocations.Merge(m, src)
}
func (m *ResourceAllocations) XXX_Size() int {
	return xxx_messageInfo_ResourceAllocations.Size(m)
}
func (m *ResourceAllocations) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceAllocations.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceAllocations proto.InternalMessageInfo

func (m *ResourceAllocations) GetResourceSlots() []*ResourceAllocations_ResourceSlot {
	if m != nil {
		return m.ResourceSlots
	}
	return nil
}

type ResourceAllocations_ResourceSlot struct {
	Slot                 int64    `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Allocation           float64  `protobuf:"fixed64,2,opt,name=allocation,proto3" json:"allocation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceAllocations_ResourceSlot) Reset()         { *m = ResourceAllocations_ResourceSlot{} }
func (m *ResourceAllocations_ResourceSlot) String() string { return proto.CompactTextString(m) }
func (*ResourceAllocations_ResourceSlot) ProtoMessage()    {}
func (*ResourceAllocations_ResourceSlot) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{21, 0}
}

func (m *ResourceAllocations_ResourceSlot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceAllocations_ResourceSlot.Unmarshal(m, b)
}
func (m *ResourceAllocations_ResourceSlot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceAllocations_ResourceSlot.Marshal(b, m, deterministic)
}
func (m *ResourceAllocations_ResourceSlot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceAllocations_ResourceSlot.Merge(m, src)
}
func (m *ResourceAllocations_ResourceSlot) XXX_Size() int {
	return xxx_messageInfo_ResourceAllocations_ResourceSlot.Size(m)
}
func (m *ResourceAllocations_ResourceSlot) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceAllocations_ResourceSlot.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceAllocations_ResourceSlot proto.InternalMessageInfo

func (m *ResourceAllocations_ResourceSlot) GetSlot() int64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *ResourceAllocations_ResourceSlot) GetAllocation() float64 {
	if m != nil {
		return m.Allocation
	}
	return 0
}

type CoreWorkerStats struct {
	CurrentTaskDesc       string                          `protobuf:"bytes,1,opt,name=current_task_desc,json=currentTaskDesc,proto3" json:"current_task_desc,omitempty"`
	NumPendingTasks       int32                           `protobuf:"varint,2,opt,name=num_pending_tasks,json=numPendingTasks,proto3" json:"num_pending_tasks,omitempty"`
	NumObjectRefsInScope  int32                           `protobuf:"varint,3,opt,name=num_object_refs_in_scope,json=numObjectRefsInScope,proto3" json:"num_object_refs_in_scope,omitempty"`
	CurrentTaskName       string                          `protobuf:"bytes,4,opt,name=current_task_name,json=currentTaskName,proto3" json:"current_task_name,omitempty"`
	CurrentTaskFuncDesc   string                          `protobuf:"bytes,5,opt,name=current_task_func_desc,json=currentTaskFuncDesc,proto3" json:"current_task_func_desc,omitempty"`
	IpAddress             string                          `protobuf:"bytes,7,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port                  int64                           `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`
	ActorId               []byte                          `protobuf:"bytes,9,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	UsedResources         map[string]*ResourceAllocations `protobuf:"bytes,10,rep,name=used_resources,json=usedResources,proto3" json:"used_resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WebuiDisplay          map[string]string               `protobuf:"bytes,11,rep,name=webui_display,json=webuiDisplay,proto3" json:"webui_display,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NumInPlasma           int32                           `protobuf:"varint,12,opt,name=num_in_plasma,json=numInPlasma,proto3" json:"num_in_plasma,omitempty"`
	NumLocalObjects       int32                           `protobuf:"varint,13,opt,name=num_local_objects,json=numLocalObjects,proto3" json:"num_local_objects,omitempty"`
	UsedObjectStoreMemory int64                           `protobuf:"varint,14,opt,name=used_object_store_memory,json=usedObjectStoreMemory,proto3" json:"used_object_store_memory,omitempty"`
	TaskQueueLength       int32                           `protobuf:"varint,15,opt,name=task_queue_length,json=taskQueueLength,proto3" json:"task_queue_length,omitempty"`
	NumExecutedTasks      int32                           `protobuf:"varint,16,opt,name=num_executed_tasks,json=numExecutedTasks,proto3" json:"num_executed_tasks,omitempty"`
	ActorTitle            string                          `protobuf:"bytes,17,opt,name=actor_title,json=actorTitle,proto3" json:"actor_title,omitempty"`
	ObjectRefs            []*ObjectRefInfo                `protobuf:"bytes,18,rep,name=object_refs,json=objectRefs,proto3" json:"object_refs,omitempty"`
	JobId                 []byte                          `protobuf:"bytes,19,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	WorkerId              []byte                          `protobuf:"bytes,20,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Language              Language                        `protobuf:"varint,21,opt,name=language,proto3,enum=ray.rpc.Language" json:"language,omitempty"`
	Pid                   uint32                          `protobuf:"varint,22,opt,name=pid,proto3" json:"pid,omitempty"`
	WorkerType            WorkerType                      `protobuf:"varint,23,opt,name=worker_type,json=workerType,proto3,enum=ray.rpc.WorkerType" json:"worker_type,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                        `json:"-"`
	XXX_unrecognized      []byte                          `json:"-"`
	XXX_sizecache         int32                           `json:"-"`
}

func (m *CoreWorkerStats) Reset()         { *m = CoreWorkerStats{} }
func (m *CoreWorkerStats) String() string { return proto.CompactTextString(m) }
func (*CoreWorkerStats) ProtoMessage()    {}
func (*CoreWorkerStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{22}
}

func (m *CoreWorkerStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreWorkerStats.Unmarshal(m, b)
}
func (m *CoreWorkerStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreWorkerStats.Marshal(b, m, deterministic)
}
func (m *CoreWorkerStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreWorkerStats.Merge(m, src)
}
func (m *CoreWorkerStats) XXX_Size() int {
	return xxx_messageInfo_CoreWorkerStats.Size(m)
}
func (m *CoreWorkerStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreWorkerStats.DiscardUnknown(m)
}

var xxx_messageInfo_CoreWorkerStats proto.InternalMessageInfo

func (m *CoreWorkerStats) GetCurrentTaskDesc() string {
	if m != nil {
		return m.CurrentTaskDesc
	}
	return ""
}

func (m *CoreWorkerStats) GetNumPendingTasks() int32 {
	if m != nil {
		return m.NumPendingTasks
	}
	return 0
}

func (m *CoreWorkerStats) GetNumObjectRefsInScope() int32 {
	if m != nil {
		return m.NumObjectRefsInScope
	}
	return 0
}

func (m *CoreWorkerStats) GetCurrentTaskName() string {
	if m != nil {
		return m.CurrentTaskName
	}
	return ""
}

func (m *CoreWorkerStats) GetCurrentTaskFuncDesc() string {
	if m != nil {
		return m.CurrentTaskFuncDesc
	}
	return ""
}

func (m *CoreWorkerStats) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *CoreWorkerStats) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *CoreWorkerStats) GetActorId() []byte {
	if m != nil {
		return m.ActorId
	}
	return nil
}

func (m *CoreWorkerStats) GetUsedResources() map[string]*ResourceAllocations {
	if m != nil {
		return m.UsedResources
	}
	return nil
}

func (m *CoreWorkerStats) GetWebuiDisplay() map[string]string {
	if m != nil {
		return m.WebuiDisplay
	}
	return nil
}

func (m *CoreWorkerStats) GetNumInPlasma() int32 {
	if m != nil {
		return m.NumInPlasma
	}
	return 0
}

func (m *CoreWorkerStats) GetNumLocalObjects() int32 {
	if m != nil {
		return m.NumLocalObjects
	}
	return 0
}

func (m *CoreWorkerStats) GetUsedObjectStoreMemory() int64 {
	if m != nil {
		return m.UsedObjectStoreMemory
	}
	return 0
}

func (m *CoreWorkerStats) GetTaskQueueLength() int32 {
	if m != nil {
		return m.TaskQueueLength
	}
	return 0
}

func (m *CoreWorkerStats) GetNumExecutedTasks() int32 {
	if m != nil {
		return m.NumExecutedTasks
	}
	return 0
}

func (m *CoreWorkerStats) GetActorTitle() string {
	if m != nil {
		return m.ActorTitle
	}
	return ""
}

func (m *CoreWorkerStats) GetObjectRefs() []*ObjectRefInfo {
	if m != nil {
		return m.ObjectRefs
	}
	return nil
}

func (m *CoreWorkerStats) GetJobId() []byte {
	if m != nil {
		return m.JobId
	}
	return nil
}

func (m *CoreWorkerStats) GetWorkerId() []byte {
	if m != nil {
		return m.WorkerId
	}
	return nil
}

func (m *CoreWorkerStats) GetLanguage() Language {
	if m != nil {
		return m.Language
	}
	return Language_PYTHON
}

func (m *CoreWorkerStats) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *CoreWorkerStats) GetWorkerType() WorkerType {
	if m != nil {
		return m.WorkerType
	}
	return WorkerType_WORKER
}

type MetricPoint struct {
	MetricName           string            `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	Timestamp            int64             `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value                float64           `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Description          string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Units                string            `protobuf:"bytes,6,opt,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MetricPoint) Reset()         { *m = MetricPoint{} }
func (m *MetricPoint) String() string { return proto.CompactTextString(m) }
func (*MetricPoint) ProtoMessage()    {}
func (*MetricPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{23}
}

func (m *MetricPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricPoint.Unmarshal(m, b)
}
func (m *MetricPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricPoint.Marshal(b, m, deterministic)
}
func (m *MetricPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricPoint.Merge(m, src)
}
func (m *MetricPoint) XXX_Size() int {
	return xxx_messageInfo_MetricPoint.Size(m)
}
func (m *MetricPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricPoint.DiscardUnknown(m)
}

var xxx_messageInfo_MetricPoint proto.InternalMessageInfo

func (m *MetricPoint) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

func (m *MetricPoint) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MetricPoint) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *MetricPoint) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *MetricPoint) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MetricPoint) GetUnits() string {
	if m != nil {
		return m.Units
	}
	return ""
}

type NamedActorInfo struct {
	RayNamespace         string   `protobuf:"bytes,1,opt,name=ray_namespace,json=rayNamespace,proto3" json:"ray_namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NamedActorInfo) Reset()         { *m = NamedActorInfo{} }
func (m *NamedActorInfo) String() string { return proto.CompactTextString(m) }
func (*NamedActorInfo) ProtoMessage()    {}
func (*NamedActorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_871313d76c7e1388, []int{24}
}

func (m *NamedActorInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamedActorInfo.Unmarshal(m, b)
}
func (m *NamedActorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamedActorInfo.Marshal(b, m, deterministic)
}
func (m *NamedActorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamedActorInfo.Merge(m, src)
}
func (m *NamedActorInfo) XXX_Size() int {
	return xxx_messageInfo_NamedActorInfo.Size(m)
}
func (m *NamedActorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NamedActorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NamedActorInfo proto.InternalMessageInfo

func (m *NamedActorInfo) GetRayNamespace() string {
	if m != nil {
		return m.RayNamespace
	}
	return ""
}

func (m *NamedActorInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("ray.rpc.Language", Language_name, Language_value)
	proto.RegisterEnum("ray.rpc.WorkerType", WorkerType_name, WorkerType_value)
	proto.RegisterEnum("ray.rpc.TaskType", TaskType_name, TaskType_value)
	proto.RegisterEnum("ray.rpc.ErrorType", ErrorType_name, ErrorType_value)
	proto.RegisterEnum("ray.rpc.WorkerExitType", WorkerExitType_name, WorkerExitType_value)
	proto.RegisterEnum("ray.rpc.PlacementStrategy", PlacementStrategy_name, PlacementStrategy_value)
	proto.RegisterType((*Address)(nil), "ray.rpc.Address")
	proto.RegisterType((*JavaFunctionDescriptor)(nil), "ray.rpc.JavaFunctionDescriptor")
	proto.RegisterType((*PythonFunctionDescriptor)(nil), "ray.rpc.PythonFunctionDescriptor")
	proto.RegisterType((*CppFunctionDescriptor)(nil), "ray.rpc.CppFunctionDescriptor")
	proto.RegisterType((*FunctionDescriptor)(nil), "ray.rpc.FunctionDescriptor")
	proto.RegisterType((*RayException)(nil), "ray.rpc.RayException")
	proto.RegisterType((*RuntimeEnv)(nil), "ray.rpc.RuntimeEnv")
	proto.RegisterType((*TaskSpec)(nil), "ray.rpc.TaskSpec")
	proto.RegisterMapType((map[string]string)(nil), "ray.rpc.TaskSpec.OverrideEnvironmentVariablesEntry")
	proto.RegisterMapType((map[string]float64)(nil), "ray.rpc.TaskSpec.RequiredPlacementResourcesEntry")
	proto.RegisterMapType((map[string]float64)(nil), "ray.rpc.TaskSpec.RequiredResourcesEntry")
	proto.RegisterType((*Bundle)(nil), "ray.rpc.Bundle")
	proto.RegisterMapType((map[string]float64)(nil), "ray.rpc.Bundle.UnitResourcesEntry")
	proto.RegisterType((*Bundle_BundleIdentifier)(nil), "ray.rpc.Bundle.BundleIdentifier")
	proto.RegisterType((*PlacementGroupSpec)(nil), "ray.rpc.PlacementGroupSpec")
	proto.RegisterType((*ObjectReference)(nil), "ray.rpc.ObjectReference")
	proto.RegisterType((*ObjectReferenceCount)(nil), "ray.rpc.ObjectReferenceCount")
	proto.RegisterType((*TaskArg)(nil), "ray.rpc.TaskArg")
	proto.RegisterType((*ActorCreationTaskSpec)(nil), "ray.rpc.ActorCreationTaskSpec")
	proto.RegisterType((*ActorTaskSpec)(nil), "ray.rpc.ActorTaskSpec")
	proto.RegisterType((*TaskExecutionSpec)(nil), "ray.rpc.TaskExecutionSpec")
	proto.RegisterType((*Task)(nil), "ray.rpc.Task")
	proto.RegisterType((*ResourceId)(nil), "ray.rpc.ResourceId")
	proto.RegisterType((*ResourceMapEntry)(nil), "ray.rpc.ResourceMapEntry")
	proto.RegisterType((*ViewData)(nil), "ray.rpc.ViewData")
	proto.RegisterType((*ViewData_Measure)(nil), "ray.rpc.ViewData.Measure")
	proto.RegisterType((*ObjectRefInfo)(nil), "ray.rpc.ObjectRefInfo")
	proto.RegisterType((*ResourceAllocations)(nil), "ray.rpc.ResourceAllocations")
	proto.RegisterType((*ResourceAllocations_ResourceSlot)(nil), "ray.rpc.ResourceAllocations.ResourceSlot")
	proto.RegisterType((*CoreWorkerStats)(nil), "ray.rpc.CoreWorkerStats")
	proto.RegisterMapType((map[string]*ResourceAllocations)(nil), "ray.rpc.CoreWorkerStats.UsedResourcesEntry")
	proto.RegisterMapType((map[string]string)(nil), "ray.rpc.CoreWorkerStats.WebuiDisplayEntry")
	proto.RegisterType((*MetricPoint)(nil), "ray.rpc.MetricPoint")
	proto.RegisterMapType((map[string]string)(nil), "ray.rpc.MetricPoint.TagsEntry")
	proto.RegisterType((*NamedActorInfo)(nil), "ray.rpc.NamedActorInfo")
}

func init() { proto.RegisterFile("src/ray/protobuf/common.proto", fileDescriptor_871313d76c7e1388) }

var fileDescriptor_871313d76c7e1388 = []byte{
	// 3324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x39, 0x4d, 0x73, 0x1b, 0x47,
	0x76, 0x02, 0x40, 0x8a, 0xc0, 0x03, 0x40, 0x82, 0x4d, 0x91, 0x82, 0x61, 0xad, 0x44, 0x43, 0xbb,
	0x09, 0xcd, 0xdd, 0xa5, 0x6b, 0x65, 0x5b, 0x4a, 0x25, 0xce, 0x6e, 0x40, 0x60, 0x6c, 0x8d, 0x4c,
	0x12, 0x48, 0x03, 0x94, 0xbc, 0xb5, 0x95, 0x9d, 0x6a, 0xcc, 0x34, 0xc9, 0x91, 0x80, 0x19, 0xb8,
	0x7b, 0x86, 0x24, 0x7c, 0xf4, 0x25, 0xd7, 0x54, 0xe5, 0x9c, 0xaa, 0x54, 0x25, 0xb7, 0x54, 0xe5,
	0x1f, 0xe4, 0x90, 0x43, 0x4e, 0xb9, 0xe5, 0x17, 0xe4, 0x47, 0xe4, 0x9c, 0xda, 0xea, 0xd7, 0x3d,
	0x83, 0xc1, 0x07, 0xad, 0xd2, 0x09, 0xd3, 0xef, 0xbd, 0x7e, 0xef, 0xf5, 0xeb, 0xf7, 0xd5, 0x0f,
	0xf0, 0x33, 0x29, 0xdc, 0xcf, 0x04, 0x9b, 0x7e, 0x36, 0x11, 0x61, 0x14, 0x0e, 0xe3, 0x8b, 0xcf,
	0xdc, 0x70, 0x3c, 0x0e, 0x83, 0x23, 0x5c, 0x93, 0x0d, 0xc1, 0xa6, 0x47, 0x62, 0xe2, 0x36, 0xaf,
	0x61, 0xa3, 0xe5, 0x79, 0x82, 0x4b, 0x49, 0x3e, 0x86, 0x92, 0x60, 0xd3, 0x11, 0x8f, 0x1c, 0xdf,
	0xab, 0xe7, 0xf6, 0x73, 0x07, 0x15, 0x5a, 0xd4, 0x00, 0xdb, 0x23, 0x3f, 0x03, 0xf0, 0x27, 0x0e,
	0xd3, 0xa4, 0xf5, 0xfc, 0x7e, 0xee, 0xa0, 0x44, 0x4b, 0xfe, 0x24, 0xd9, 0x4b, 0x60, 0x6d, 0x12,
	0x8a, 0xa8, 0x5e, 0xd8, 0xcf, 0x1d, 0xac, 0x53, 0xfc, 0x56, 0xfc, 0x6e, 0x42, 0xf1, 0x8e, 0x0b,
	0xc5, 0x6f, 0x4d, 0xf3, 0xd3, 0x00, 0xdb, 0x6b, 0xfe, 0x00, 0x7b, 0xaf, 0xd8, 0x35, 0xfb, 0x3a,
	0x0e, 0xdc, 0xc8, 0x0f, 0x83, 0x0e, 0x97, 0xae, 0xf0, 0x27, 0x51, 0x28, 0x94, 0x24, 0x77, 0xc4,
	0xa4, 0x74, 0x02, 0x36, 0xe6, 0xa8, 0x47, 0x89, 0x96, 0x10, 0x72, 0xc6, 0xc6, 0x9c, 0x3c, 0x85,
	0xea, 0x85, 0xd9, 0xa4, 0x29, 0xb4, 0x2e, 0x95, 0x04, 0x88, 0x44, 0x8f, 0xa0, 0x24, 0xfd, 0xcb,
	0x80, 0x45, 0xb1, 0xe0, 0xa8, 0x53, 0x89, 0xce, 0x00, 0xcd, 0x7f, 0xcd, 0x41, 0xbd, 0x37, 0x8d,
	0xae, 0xc2, 0x60, 0x85, 0xf8, 0x27, 0x50, 0x1e, 0x87, 0x5e, 0x3c, 0xe2, 0x59, 0xf9, 0xa0, 0x41,
	0xc8, 0x7b, 0x5e, 0xbf, 0xfc, 0x7b, 0xf5, 0x2b, 0xac, 0xd0, 0x2f, 0x4b, 0x74, 0xc5, 0xe4, 0x15,
	0x9a, 0x27, 0x43, 0xf4, 0x92, 0xc9, 0xab, 0xe6, 0x57, 0xb0, 0xdb, 0x9e, 0x4c, 0x56, 0xa8, 0xb8,
	0x24, 0x22, 0xb7, 0x2c, 0xa2, 0xf9, 0x5f, 0x79, 0x20, 0x2b, 0xf6, 0xfe, 0x01, 0xea, 0x6f, 0xd9,
	0x35, 0x73, 0x52, 0x06, 0x5e, 0x8a, 0x43, 0x36, 0xe5, 0x67, 0x4f, 0x8e, 0x8c, 0x6f, 0x1c, 0xad,
	0xbe, 0xa0, 0x97, 0xf7, 0xe8, 0xde, 0xdb, 0xd5, 0x57, 0xc7, 0xa0, 0x31, 0x41, 0xbb, 0xae, 0x64,
	0x9f, 0x47, 0xf6, 0x9f, 0xa4, 0xec, 0xef, 0xba, 0x82, 0x97, 0xf7, 0x68, 0x7d, 0x72, 0xd7, 0xf5,
	0x7c, 0x07, 0x0f, 0xdd, 0xc9, 0x64, 0x25, 0xff, 0x02, 0xf2, 0x7f, 0x9c, 0xf2, 0x5f, 0x69, 0xbc,
	0x97, 0xf7, 0xe8, 0xae, 0xbb, 0x0a, 0x71, 0xbc, 0x0b, 0x3b, 0x2b, 0xb8, 0x36, 0xff, 0x3d, 0x07,
	0x15, 0xca, 0xa6, 0xd6, 0xad, 0xcb, 0x27, 0x0a, 0x47, 0x7e, 0x0d, 0xc5, 0x11, 0x0b, 0x2e, 0x63,
	0x76, 0xa9, 0x0d, 0xbf, 0xf9, 0x6c, 0x3b, 0x15, 0x79, 0x62, 0x10, 0x34, 0x25, 0x21, 0xbf, 0x81,
	0x07, 0x92, 0x0b, 0x9f, 0x8d, 0xfc, 0x1f, 0xb8, 0xe7, 0xf0, 0x84, 0x0d, 0x5a, 0xa3, 0x42, 0x77,
	0x66, 0xb8, 0x99, 0x84, 0xaf, 0xa0, 0x71, 0x11, 0x8a, 0x31, 0x8b, 0xa2, 0xec, 0x0e, 0x47, 0x46,
	0xc2, 0x0f, 0x2e, 0x8d, 0x3f, 0xd5, 0x53, 0x8a, 0x74, 0x5f, 0x1f, 0xf1, 0xcd, 0xbf, 0x02, 0xa0,
	0x71, 0x10, 0xf9, 0x63, 0x6e, 0x05, 0xd7, 0xe4, 0x23, 0x28, 0x0a, 0x76, 0xe3, 0xbc, 0x95, 0x61,
	0x60, 0xdc, 0x64, 0x43, 0xb0, 0x9b, 0x57, 0x32, 0x0c, 0x54, 0xcc, 0xc6, 0xc2, 0x57, 0xc1, 0x5c,
	0x38, 0x28, 0x51, 0xfc, 0x6e, 0xfe, 0x43, 0x05, 0x8a, 0x03, 0x26, 0xdf, 0xf5, 0x27, 0xdc, 0x25,
	0xbf, 0x80, 0xb5, 0x68, 0x3a, 0x59, 0x3e, 0xa5, 0x22, 0x18, 0x4c, 0x27, 0x9c, 0x22, 0x5a, 0xf1,
	0xc9, 0x84, 0x02, 0x7e, 0xcf, 0x19, 0xa9, 0xf0, 0x7e, 0x23, 0x9d, 0xac, 0xb4, 0x3d, 0x46, 0x45,
	0xf9, 0xd9, 0xc7, 0xe9, 0xce, 0xe5, 0x5b, 0xa3, 0xe4, 0x62, 0xd9, 0x47, 0x76, 0xe1, 0xfe, 0xdb,
	0x70, 0xa8, 0xb2, 0xce, 0x3a, 0x1a, 0x79, 0xfd, 0x6d, 0x38, 0xb4, 0x3d, 0xf2, 0x10, 0x36, 0x22,
	0x26, 0xdf, 0x29, 0xf8, 0x7d, 0x84, 0xdf, 0x57, 0x4b, 0xdb, 0x23, 0x3f, 0x87, 0xcd, 0x09, 0x13,
	0x3c, 0x88, 0x9c, 0x04, 0xbf, 0x81, 0xf8, 0x8a, 0x86, 0x0e, 0x34, 0xd5, 0x2f, 0x52, 0x2a, 0x37,
	0x8c, 0x83, 0x88, 0x8b, 0x7a, 0x71, 0x3f, 0x77, 0xb0, 0x46, 0xab, 0x1a, 0xda, 0xd6, 0x40, 0x95,
	0xf5, 0x5c, 0x36, 0x1a, 0xe9, 0xac, 0x57, 0xd2, 0x59, 0x4f, 0x03, 0x6c, 0x8f, 0xbc, 0x80, 0x4d,
	0x83, 0x4c, 0x32, 0x29, 0xe0, 0x11, 0x6b, 0xe9, 0x11, 0x4d, 0x42, 0xa5, 0x55, 0x4d, 0x97, 0xe4,
	0xd7, 0x9f, 0xc3, 0x1a, 0x13, 0x97, 0xb2, 0x5e, 0xde, 0x2f, 0xcc, 0x91, 0x2b, 0xdd, 0x5a, 0xe2,
	0x92, 0x22, 0x56, 0xe5, 0xae, 0x20, 0x1e, 0x3b, 0x82, 0x47, 0xb1, 0x08, 0x64, 0xbd, 0x82, 0xfa,
	0x41, 0x10, 0x8f, 0xa9, 0x86, 0x90, 0x37, 0x40, 0x04, 0xff, 0x3e, 0xf6, 0x05, 0xf7, 0x1c, 0xc1,
	0x65, 0x18, 0x0b, 0x97, 0xcb, 0x7a, 0x15, 0x99, 0x1e, 0xcc, 0x31, 0x55, 0x0e, 0x70, 0x44, 0x0d,
	0x2d, 0x4d, 0x48, 0xad, 0x20, 0x12, 0x53, 0xba, 0x2d, 0x16, 0xe1, 0x44, 0xc2, 0xa3, 0x94, 0xf1,
	0x64, 0xc4, 0x5c, 0x3e, 0x56, 0x86, 0x9a, 0x89, 0xd8, 0x44, 0x11, 0xbf, 0xb9, 0x5b, 0x44, 0x2f,
	0xd9, 0xb4, 0x20, 0xab, 0x21, 0xee, 0x24, 0x20, 0x6f, 0xa0, 0xce, 0xdc, 0x28, 0x14, 0x8e, 0x2b,
	0x38, 0x43, 0xdf, 0xc1, 0xfb, 0x93, 0x13, 0xee, 0xd6, 0xb7, 0x16, 0x92, 0x41, 0x4b, 0x11, 0xb6,
	0x0d, 0x5d, 0x22, 0x9d, 0xee, 0xb2, 0x55, 0x60, 0xf2, 0x5b, 0xd8, 0xd2, 0x8c, 0x67, 0xfc, 0x6a,
	0xc8, 0x6f, 0x6f, 0x9e, 0x5f, 0xca, 0xa7, 0xca, 0xb2, 0x4b, 0xac, 0x21, 0xec, 0x56, 0xdd, 0x83,
	0xf0, 0xb9, 0xac, 0x6f, 0x63, 0x51, 0x84, 0x31, 0xbb, 0xa5, 0x1a, 0x42, 0x7e, 0x05, 0x64, 0x66,
	0xa5, 0x4b, 0x11, 0xc6, 0x13, 0xe5, 0x2d, 0x04, 0xbd, 0xa5, 0x96, 0x62, 0xbe, 0x51, 0x08, 0xdb,
	0x23, 0xbf, 0x83, 0x47, 0x8b, 0xd4, 0xc3, 0x38, 0xf0, 0x46, 0xdc, 0xf1, 0x03, 0x8f, 0xdf, 0xd6,
	0x77, 0xf6, 0x73, 0x07, 0x05, 0xfa, 0xd1, 0xfc, 0xbe, 0x63, 0xa4, 0xb0, 0x15, 0x01, 0x39, 0x81,
	0xa7, 0x8b, 0x0c, 0x5c, 0x36, 0x51, 0xb5, 0xd0, 0x71, 0xaf, 0xfc, 0x91, 0x87, 0xe7, 0x94, 0xf5,
	0x07, 0xfb, 0xb9, 0x83, 0x22, 0x7d, 0x32, 0xcf, 0xa7, 0xad, 0x09, 0xdb, 0x8a, 0x4e, 0x1d, 0x50,
	0x92, 0x29, 0x3c, 0x0e, 0xaf, 0xb9, 0x10, 0xbe, 0xc7, 0x1d, 0x1e, 0x5c, 0xfb, 0x22, 0x0c, 0x90,
	0xf1, 0x35, 0x13, 0x3e, 0x1b, 0x8e, 0xb8, 0xac, 0xef, 0xe2, 0x6d, 0x7f, 0xbe, 0x7c, 0xdb, 0x5d,
	0xb3, 0xcf, 0x9a, 0x6d, 0x7b, 0x9d, 0xec, 0xd2, 0xf7, 0xfd, 0x28, 0xfc, 0x09, 0x12, 0x15, 0x83,
	0xf2, 0x9d, 0x3f, 0x71, 0xf8, 0x2d, 0x77, 0x63, 0x4c, 0xa3, 0x7b, 0xa8, 0x73, 0x55, 0x41, 0xad,
	0x04, 0x48, 0x3e, 0x83, 0x1d, 0x8f, 0x0f, 0xe3, 0xcb, 0x4b, 0x2e, 0x9c, 0xa1, 0xe0, 0xec, 0xdd,
	0x24, 0xf4, 0x83, 0xa8, 0xfe, 0x10, 0xed, 0x4b, 0x12, 0xd4, 0x71, 0x8a, 0x21, 0x5f, 0xc0, 0x5e,
	0x26, 0x49, 0x0b, 0x9d, 0x3e, 0xd5, 0xe1, 0xea, 0x75, 0x4c, 0x6a, 0x99, 0x14, 0x3e, 0xcb, 0xad,
	0x8d, 0x0e, 0xec, 0xad, 0x8e, 0x10, 0x52, 0x83, 0xc2, 0x3b, 0x3e, 0x35, 0x09, 0x57, 0x7d, 0x92,
	0x07, 0xb0, 0x7e, 0xcd, 0x46, 0xb1, 0xce, 0x92, 0x39, 0xaa, 0x17, 0x7f, 0x99, 0xff, 0x8b, 0x5c,
	0xe3, 0x14, 0x9e, 0xbc, 0x27, 0x08, 0x3e, 0x88, 0x5d, 0x17, 0x3e, 0x79, 0xaf, 0x95, 0xdf, 0xc7,
	0xb0, 0x94, 0x61, 0xd8, 0xfc, 0x9f, 0x3c, 0xdc, 0xd7, 0xce, 0x44, 0xfe, 0x1a, 0x4a, 0x89, 0xe3,
	0x79, 0xa6, 0x5b, 0xd8, 0x4f, 0x2f, 0x59, 0xd3, 0x98, 0x1f, 0xdb, 0xe3, 0x41, 0xe4, 0x5f, 0xf8,
	0x5c, 0xd0, 0xe2, 0xd0, 0x40, 0x88, 0x0d, 0x9b, 0x71, 0xe0, 0x67, 0xd3, 0x42, 0x1e, 0x1d, 0xa5,
	0xb9, 0xc8, 0xe3, 0x3c, 0xf0, 0x17, 0xf3, 0x40, 0x35, 0xce, 0xc2, 0x54, 0x2e, 0x0f, 0x42, 0x0f,
	0xf5, 0x28, 0xe8, 0x5c, 0xae, 0x96, 0xb6, 0xd7, 0x70, 0xa1, 0xb6, 0xa8, 0xc1, 0x1d, 0xd1, 0x96,
	0xbb, 0x23, 0xda, 0x3e, 0x81, 0xca, 0x5c, 0x74, 0xe5, 0x31, 0x7a, 0xcb, 0xc3, 0x59, 0x3c, 0x35,
	0xfe, 0x06, 0xc8, 0xb2, 0x8a, 0x1f, 0x72, 0x4b, 0xcd, 0x1f, 0x0b, 0x40, 0x7a, 0x73, 0x92, 0x31,
	0x71, 0x7c, 0x98, 0xa6, 0xab, 0x0a, 0xef, 0xa7, 0xb0, 0xa1, 0x35, 0x95, 0xf5, 0x02, 0x1a, 0x77,
	0x6b, 0xc1, 0xb8, 0x34, 0xc1, 0x93, 0xe7, 0x50, 0x94, 0x91, 0x60, 0x11, 0xbf, 0x9c, 0x62, 0xa5,
	0xdd, 0x7c, 0xd6, 0x98, 0xf5, 0x66, 0x89, 0xac, 0xbe, 0xa1, 0xa0, 0x29, 0xad, 0x2a, 0x97, 0x98,
	0x70, 0x43, 0xe1, 0xcc, 0x95, 0xd9, 0x8a, 0x81, 0xbe, 0xc2, 0x6a, 0x7b, 0x00, 0xb5, 0x84, 0x4a,
	0xe7, 0xd2, 0xb4, 0xec, 0x26, 0xbb, 0x31, 0x85, 0xce, 0x53, 0x2a, 0x7e, 0x1e, 0x67, 0xba, 0x00,
	0x17, 0x53, 0xca, 0x57, 0xe1, 0xb0, 0xc3, 0x99, 0xa7, 0xcc, 0x33, 0xcf, 0x13, 0x69, 0x8b, 0x48,
	0x5b, 0xcb, 0x72, 0x45, 0xea, 0x27, 0x50, 0xf6, 0xa5, 0xe3, 0xf1, 0x88, 0xb9, 0x57, 0x5c, 0xd7,
	0xe2, 0x22, 0x05, 0x5f, 0x76, 0x0c, 0xa4, 0xc9, 0x61, 0xab, 0x3b, 0x7c, 0xcb, 0xdd, 0x88, 0xf2,
	0x0b, 0x2e, 0x78, 0xe0, 0x72, 0x55, 0xbd, 0x43, 0x04, 0x65, 0xde, 0x40, 0x1a, 0x60, 0x7b, 0xe4,
	0x4b, 0xa8, 0x86, 0x37, 0x41, 0xa6, 0x78, 0xe7, 0xef, 0x28, 0xde, 0x15, 0x24, 0x33, 0xab, 0xe6,
	0x7f, 0xe4, 0xe1, 0xc1, 0x82, 0x1c, 0x6c, 0x16, 0xc8, 0x73, 0x28, 0x89, 0x04, 0x62, 0xc2, 0xa9,
	0x9e, 0xf2, 0x5a, 0xd8, 0x41, 0x67, 0xa4, 0xa4, 0x09, 0xd5, 0x2b, 0x26, 0x9d, 0x51, 0xe8, 0xb2,
	0x91, 0x23, 0xf8, 0x05, 0xea, 0x51, 0xa4, 0xe5, 0x2b, 0x26, 0x4f, 0x14, 0x8c, 0xf2, 0x0b, 0x72,
	0x04, 0xa5, 0x61, 0x28, 0x44, 0x78, 0xc3, 0x45, 0xe2, 0x09, 0xcb, 0x7a, 0xce, 0x48, 0x48, 0x07,
	0xb6, 0x65, 0x14, 0xaa, 0xf2, 0xed, 0x07, 0x8e, 0x3e, 0xb1, 0xac, 0xaf, 0xe1, 0xbe, 0xbb, 0x75,
	0xda, 0xd2, 0x5b, 0xec, 0x40, 0x23, 0x24, 0x79, 0x01, 0x75, 0x37, 0x0c, 0x22, 0xe6, 0x07, 0x9a,
	0x91, 0xe1, 0xef, 0xcd, 0x9c, 0x64, 0x37, 0xc5, 0xdb, 0xc1, 0xb1, 0xc1, 0xda, 0x1e, 0x69, 0x40,
	0xd1, 0x20, 0x64, 0xfd, 0xfe, 0x7e, 0x01, 0x9b, 0x26, 0xb3, 0x6e, 0xfe, 0x73, 0x0e, 0x36, 0x4c,
	0x9f, 0x43, 0x5e, 0x00, 0x98, 0xfb, 0x51, 0xe7, 0x7e, 0xaf, 0xcd, 0xc2, 0x04, 0xa0, 0x62, 0xc5,
	0x63, 0x11, 0x33, 0x6d, 0x37, 0x7e, 0x2b, 0xa1, 0x63, 0x1e, 0x31, 0x84, 0xeb, 0x2c, 0x92, 0xae,
	0x95, 0xab, 0x05, 0x5c, 0x46, 0x78, 0x8c, 0x91, 0x3e, 0x8e, 0xa7, 0x0d, 0x52, 0xa1, 0x35, 0x8d,
	0xb1, 0x35, 0xc2, 0xf6, 0x64, 0xf3, 0x3f, 0x0b, 0xb0, 0xbb, 0xb2, 0xc3, 0x50, 0xfd, 0x77, 0xea,
	0xfe, 0x5a, 0xf6, 0x06, 0x33, 0x7e, 0xff, 0x2b, 0x20, 0xaa, 0x4b, 0xd0, 0x68, 0xc1, 0x65, 0xc4,
	0x44, 0x24, 0x51, 0x91, 0x02, 0xad, 0x8d, 0xd9, 0x2d, 0x32, 0xa4, 0x06, 0xae, 0xa2, 0x44, 0x51,
	0x63, 0x47, 0x92, 0x34, 0x16, 0x6b, 0x48, 0xbb, 0x39, 0x66, 0xb7, 0x4a, 0x5e, 0xd2, 0x5c, 0x7c,
	0x01, 0x7b, 0xde, 0x34, 0x60, 0x63, 0xdf, 0x75, 0xcc, 0xfb, 0x3b, 0xc4, 0xf7, 0x81, 0xac, 0xaf,
	0x63, 0xa7, 0xff, 0xc0, 0x60, 0xdf, 0x20, 0xb2, 0xab, 0x71, 0xe4, 0xcf, 0x61, 0x4b, 0xf1, 0x77,
	0xc3, 0xc0, 0x8d, 0x85, 0x32, 0xdf, 0x14, 0xc3, 0x75, 0x1d, 0xd9, 0xb7, 0x67, 0xd0, 0xc5, 0xb0,
	0xda, 0x58, 0x0c, 0xab, 0x34, 0x2d, 0x15, 0x33, 0x69, 0xe9, 0x29, 0x54, 0x05, 0x9b, 0xe2, 0x6b,
	0x55, 0x4e, 0x98, 0xcb, 0x31, 0x1a, 0x4b, 0xb4, 0x22, 0xd8, 0xf4, 0x2c, 0x81, 0xe1, 0x8c, 0x41,
	0x3a, 0x4c, 0x4e, 0x03, 0xd7, 0x0f, 0xb1, 0x33, 0x2e, 0xd2, 0x92, 0x2f, 0x5b, 0x1a, 0xa0, 0x8a,
	0x3f, 0xbf, 0x8d, 0x78, 0x20, 0xf1, 0x95, 0xa0, 0x2e, 0xad, 0x8c, 0x4c, 0xaa, 0x29, 0xb4, 0xa3,
	0x6e, 0xee, 0x39, 0x3c, 0xcc, 0xd4, 0x72, 0x6d, 0xdd, 0x2b, 0xa6, 0x52, 0x1e, 0x36, 0xc4, 0x15,
	0xba, 0x3b, 0x43, 0xa3, 0x89, 0x5f, 0x22, 0xb2, 0xf9, 0xbf, 0x39, 0xa8, 0xce, 0x75, 0x75, 0x3f,
	0x75, 0x77, 0xc7, 0xf0, 0x78, 0xa1, 0xf5, 0xf4, 0xe2, 0xf1, 0x78, 0xea, 0xcc, 0x92, 0x87, 0x1e,
	0x78, 0x34, 0xe6, 0x1a, 0xcc, 0x8e, 0xa2, 0xe9, 0x26, 0xe9, 0xe4, 0x29, 0x54, 0x0d, 0x0f, 0xf3,
	0x9e, 0x58, 0xc7, 0x7e, 0xbd, 0xa2, 0xb7, 0x98, 0xe7, 0xc4, 0xb7, 0xf0, 0x74, 0x22, 0xf8, 0xb5,
	0x1f, 0xc6, 0xd2, 0xc9, 0xf4, 0xa4, 0x8b, 0xd2, 0xf4, 0x83, 0xe5, 0x71, 0x42, 0x9a, 0x9e, 0x63,
	0x4e, 0x62, 0xf3, 0xef, 0x60, 0x5b, 0x01, 0xd3, 0x46, 0xc9, 0xbc, 0xf2, 0x36, 0x47, 0x4c, 0x46,
	0x8e, 0xea, 0x6a, 0x64, 0xc4, 0xc6, 0x13, 0x53, 0xad, 0xaa, 0x0a, 0x3a, 0x48, 0x80, 0xaa, 0x2c,
	0xaa, 0xb7, 0xc5, 0x45, 0x28, 0x6e, 0x98, 0xf0, 0xb4, 0x9f, 0xae, 0x51, 0xf5, 0xde, 0xf8, 0xda,
	0x80, 0x9a, 0x3f, 0xe6, 0x60, 0x4d, 0xf1, 0x57, 0xc9, 0x67, 0xd6, 0x39, 0xeb, 0x20, 0xdd, 0x5e,
	0x6a, 0x06, 0x69, 0x31, 0x4a, 0x0c, 0xfd, 0x0a, 0x76, 0x90, 0x3e, 0x6d, 0xeb, 0xf4, 0x4e, 0x9d,
	0x5e, 0x1b, 0x73, 0x3b, 0xe7, 0x74, 0xa7, 0xdb, 0xd1, 0x22, 0xa8, 0xf9, 0x5b, 0x80, 0xa4, 0x2e,
	0xdb, 0x9e, 0xaa, 0xc0, 0xba, 0x8a, 0xe7, 0x30, 0x54, 0xf4, 0x42, 0x05, 0xfe, 0xf7, 0x31, 0x0b,
	0x22, 0x3f, 0x9a, 0x9a, 0xc3, 0xa6, 0xeb, 0xe6, 0x1f, 0xa1, 0x96, 0xec, 0x3f, 0x65, 0x13, 0x5d,
	0xd9, 0x13, 0x8f, 0xce, 0x65, 0x3c, 0xfa, 0x39, 0x54, 0x92, 0x3e, 0x06, 0x53, 0x83, 0x6e, 0x65,
	0x76, 0x52, 0x65, 0x67, 0x4a, 0xd0, 0xb2, 0x48, 0xbf, 0x65, 0xf3, 0xff, 0x0a, 0x50, 0x7c, 0xed,
	0xf3, 0x1b, 0xf4, 0xd5, 0x8f, 0xa1, 0x74, 0xed, 0xf3, 0x9b, 0xec, 0x14, 0xa7, 0xa8, 0x00, 0x38,
	0x24, 0xfa, 0x52, 0xa5, 0x27, 0x26, 0x63, 0x91, 0x36, 0x4a, 0x1f, 0xa5, 0xdc, 0x13, 0x0e, 0x47,
	0xa7, 0x9a, 0x82, 0xa6, 0xa4, 0x8d, 0x7f, 0x2c, 0xc0, 0x86, 0x81, 0x2a, 0xc5, 0x23, 0x76, 0x29,
	0x13, 0xc5, 0xd5, 0xb7, 0x92, 0xe9, 0x63, 0xb7, 0x9e, 0x34, 0x26, 0x05, 0x5a, 0xf4, 0x55, 0x87,
	0x38, 0x8a, 0xb9, 0xba, 0x65, 0x2f, 0x8c, 0x87, 0x23, 0x6e, 0xf0, 0x05, 0xb4, 0x4e, 0x59, 0xc3,
	0x34, 0xc9, 0xa7, 0x50, 0xf3, 0x7c, 0x19, 0x09, 0x7f, 0xa8, 0xaf, 0x6a, 0xec, 0x07, 0xe8, 0xec,
	0x39, 0xba, 0x95, 0x85, 0x9f, 0xfa, 0x01, 0xf9, 0x25, 0x6c, 0xcf, 0x93, 0x72, 0x16, 0xa0, 0x97,
	0xe7, 0xe8, 0x1c, 0x8f, 0x53, 0xce, 0x82, 0x65, 0xbe, 0xec, 0x16, 0x33, 0xd0, 0x22, 0x5f, 0x76,
	0x4b, 0x7e, 0x0d, 0x64, 0x8e, 0x14, 0x03, 0x08, 0x63, 0x20, 0x47, 0xe7, 0x24, 0xea, 0x3a, 0xdb,
	0x81, 0xc7, 0x73, 0xe4, 0xc3, 0xd8, 0x7d, 0xc7, 0x23, 0x67, 0x18, 0xc6, 0x81, 0xc7, 0x30, 0x91,
	0x16, 0xf7, 0x0b, 0x07, 0x39, 0xfa, 0x28, 0x4b, 0x75, 0x8c, 0x44, 0xc7, 0x29, 0x0d, 0xf9, 0x0a,
	0x1a, 0xab, 0xb8, 0xa0, 0x6c, 0x59, 0x2f, 0x21, 0x87, 0xfa, 0x32, 0x07, 0x54, 0x41, 0x36, 0xff,
	0x25, 0x0f, 0xd5, 0xb4, 0x3c, 0xd9, 0xc1, 0x45, 0xf8, 0xd3, 0xad, 0x86, 0x99, 0x22, 0x38, 0xd2,
	0x8f, 0x92, 0xfe, 0x0e, 0xa7, 0x08, 0x7d, 0x3f, 0xe2, 0x2a, 0x03, 0x9b, 0x9d, 0xd2, 0xff, 0x81,
	0x9b, 0x8a, 0x61, 0xea, 0x62, 0xdf, 0xff, 0x81, 0x93, 0x3f, 0x83, 0xad, 0xb4, 0x39, 0x30, 0xc6,
	0xd1, 0xa5, 0xa2, 0x3a, 0x32, 0xfd, 0x81, 0x36, 0xcc, 0x0b, 0xa8, 0xcb, 0x78, 0x38, 0xf6, 0x71,
	0xd0, 0x64, 0x2a, 0x4b, 0xb2, 0x61, 0x1d, 0x37, 0xec, 0xa6, 0x78, 0x5d, 0x61, 0xcc, 0x46, 0xd5,
	0x88, 0x65, 0xeb, 0xbc, 0xea, 0x77, 0x3c, 0x53, 0xb8, 0x6b, 0x99, 0x0a, 0xdf, 0x55, 0x70, 0x55,
	0xba, 0x26, 0x7e, 0x60, 0x48, 0xc7, 0x7c, 0x1c, 0x8a, 0x69, 0xd2, 0xe0, 0x69, 0xb8, 0x1d, 0x9c,
	0x22, 0xb4, 0xf9, 0x6f, 0x39, 0xd8, 0x49, 0x02, 0xa7, 0x35, 0x52, 0xca, 0xea, 0xe2, 0xd4, 0x83,
	0xcd, 0x34, 0xd8, 0xe4, 0x28, 0x8c, 0x94, 0x47, 0xab, 0x80, 0xf8, 0x74, 0x29, 0xdc, 0x32, 0xbb,
	0x52, 0x58, 0x7f, 0x14, 0x46, 0xb4, 0x2a, 0x32, 0x2b, 0xd9, 0x38, 0x86, 0x4a, 0x16, 0xad, 0x22,
	0x45, 0x31, 0x36, 0x79, 0x02, 0xbf, 0xc9, 0x63, 0x00, 0x96, 0xb2, 0x33, 0x89, 0x22, 0x03, 0x69,
	0xfe, 0x7f, 0x11, 0xb6, 0xda, 0xa1, 0xe0, 0xba, 0x90, 0xf6, 0x23, 0x16, 0x49, 0x72, 0x08, 0xdb,
	0xba, 0x52, 0x9a, 0x61, 0x92, 0xc7, 0xa5, 0x6b, 0xc2, 0x6f, 0xcb, 0x20, 0x30, 0x2f, 0x73, 0xe9,
	0x2a, 0x5a, 0x95, 0x52, 0x27, 0x3c, 0xf0, 0xfc, 0xe0, 0xd2, 0x3c, 0xc2, 0xf5, 0x73, 0x63, 0x2b,
	0x88, 0xc7, 0x3d, 0x0d, 0xd7, 0x8f, 0xee, 0xe7, 0x50, 0x57, 0xb4, 0xb3, 0xe6, 0x47, 0x2a, 0x63,
	0x4a, 0x37, 0x9c, 0x70, 0x33, 0x74, 0x7f, 0x10, 0xc4, 0xe3, 0xd4, 0xc3, 0xa4, 0x1d, 0xf4, 0x15,
	0x6e, 0x49, 0x1f, 0xcc, 0x34, 0x6b, 0x4b, 0xfa, 0x60, 0xc2, 0xf9, 0x1c, 0xf6, 0xe6, 0x68, 0x2f,
	0xe2, 0xc0, 0xd5, 0x07, 0x58, 0xc7, 0x0d, 0x3b, 0x99, 0x0d, 0x5f, 0xc7, 0x81, 0x8b, 0x87, 0x98,
	0xff, 0x63, 0x60, 0xe3, 0xae, 0x3f, 0x06, 0x8a, 0xda, 0xae, 0xf8, 0xc7, 0x40, 0xb6, 0xae, 0x96,
	0xe6, 0xeb, 0x2a, 0x85, 0xcd, 0x58, 0xce, 0x0d, 0xa7, 0x00, 0x2f, 0xfa, 0x97, 0xb3, 0xa9, 0xee,
	0xbc, 0xc1, 0x8f, 0xce, 0xe5, 0xd2, 0x7c, 0xaa, 0x1a, 0x67, 0x61, 0xa4, 0x0b, 0xd5, 0x1b, 0x3e,
	0x8c, 0x7d, 0xc7, 0xf3, 0xe5, 0x64, 0xc4, 0xa6, 0x66, 0x88, 0x76, 0x78, 0x27, 0xcb, 0x37, 0x8a,
	0xba, 0xa3, 0x89, 0x35, 0xc7, 0xca, 0x4d, 0x06, 0xa4, 0xfa, 0x6f, 0x75, 0x17, 0x7e, 0xe0, 0x4c,
	0x46, 0x4c, 0x8e, 0x19, 0xf6, 0x15, 0xeb, 0x58, 0x0b, 0xed, 0xa0, 0x87, 0xa0, 0xe4, 0x6e, 0x75,
	0x18, 0x26, 0xfd, 0x74, 0x35, 0xbd, 0x5b, 0xec, 0xd3, 0x33, 0x5d, 0x33, 0x1e, 0x3a, 0x09, 0x6a,
	0xd5, 0x54, 0x27, 0x71, 0xb2, 0xa9, 0xc3, 0x50, 0xe1, 0x35, 0x79, 0x5f, 0x61, 0x75, 0xb8, 0x28,
	0x21, 0x78, 0x51, 0xdf, 0xc7, 0x3c, 0xe6, 0xce, 0x88, 0x07, 0x97, 0xd1, 0x15, 0x4e, 0xbe, 0xd6,
	0xe9, 0x96, 0x42, 0xfc, 0xad, 0x82, 0x9f, 0x20, 0x18, 0x1b, 0xda, 0x78, 0x6c, 0x4a, 0x2c, 0x4f,
	0x46, 0x3e, 0x35, 0x24, 0xae, 0x05, 0xf1, 0xd8, 0x32, 0x08, 0xed, 0x6e, 0x4f, 0xa0, 0x6c, 0xba,
	0x0d, 0x3f, 0x1a, 0x71, 0x9c, 0x60, 0x95, 0x28, 0xe8, 0x29, 0x97, 0x82, 0x90, 0x17, 0x69, 0x0e,
	0x52, 0xbe, 0x58, 0x27, 0x68, 0xd2, 0xbd, 0xe5, 0x4e, 0x5c, 0xa5, 0xba, 0x24, 0x37, 0x29, 0xbf,
	0xcc, 0x0c, 0x67, 0x77, 0xb2, 0xc3, 0xd9, 0xb9, 0x3f, 0x8b, 0x1e, 0xcc, 0xff, 0x59, 0x34, 0x37,
	0x4d, 0xde, 0x7d, 0xff, 0x34, 0xb9, 0x06, 0x85, 0x89, 0xef, 0xe1, 0x68, 0xa8, 0x4a, 0xd5, 0x27,
	0xf9, 0x02, 0xca, 0x86, 0x3b, 0x0e, 0xb4, 0x1f, 0x22, 0x8f, 0x59, 0xad, 0xd6, 0x97, 0x8f, 0x23,
	0x6d, 0xb8, 0x49, 0xbf, 0x1b, 0x7f, 0x04, 0xb2, 0xec, 0x5d, 0x2b, 0x9e, 0xf9, 0xcf, 0xb2, 0xcf,
	0xfc, 0xf2, 0xb3, 0x47, 0x3f, 0x95, 0x94, 0xb2, 0xa3, 0x9a, 0xdf, 0xc1, 0xf6, 0x92, 0xab, 0x7d,
	0xd0, 0x68, 0xe6, 0xef, 0xf3, 0x50, 0x3e, 0x55, 0x5d, 0xbf, 0xdb, 0xc3, 0x31, 0xd6, 0x13, 0x28,
	0x8f, 0x71, 0x39, 0xff, 0xdf, 0x15, 0x82, 0x92, 0xff, 0xc5, 0xe6, 0xdb, 0xbc, 0x02, 0x9d, 0x01,
	0x66, 0x82, 0x0a, 0x99, 0x71, 0x05, 0x79, 0x66, 0x7a, 0x08, 0xfd, 0x18, 0x9c, 0x4d, 0x54, 0x33,
	0x82, 0x8f, 0x06, 0xec, 0xd2, 0xc4, 0x9e, 0xee, 0x31, 0xf6, 0xa1, 0x9c, 0x8c, 0xf1, 0x55, 0xea,
	0xd4, 0xe9, 0x23, 0x0b, 0x52, 0xb2, 0xe2, 0xc0, 0x8f, 0x24, 0x96, 0xf8, 0x12, 0xd5, 0x8b, 0xc6,
	0x0b, 0x28, 0xa5, 0xac, 0x3e, 0xc8, 0x12, 0x36, 0x6c, 0xaa, 0x03, 0xea, 0x86, 0x1e, 0xcb, 0xeb,
	0xd2, 0x8b, 0x23, 0xb7, 0xe2, 0xc5, 0xb1, 0x62, 0x82, 0x72, 0xf8, 0x25, 0x14, 0x13, 0x9f, 0x22,
	0x00, 0xf7, 0x7b, 0xbf, 0x1f, 0xbc, 0xec, 0x9e, 0xd5, 0xee, 0x91, 0x22, 0xac, 0xbd, 0x6a, 0xbd,
	0x6e, 0xd5, 0x72, 0x64, 0x03, 0x0a, 0xed, 0x5e, 0xaf, 0x96, 0x57, 0xe8, 0x6f, 0xba, 0x27, 0xad,
	0xb3, 0x6f, 0x6a, 0x85, 0xc3, 0x3f, 0x00, 0xcc, 0xdc, 0x48, 0x61, 0xde, 0x74, 0xe9, 0xb7, 0x16,
	0xad, 0xdd, 0x53, 0xdf, 0x1d, 0x6a, 0xbf, 0xb6, 0x68, 0x2d, 0x47, 0x6a, 0x50, 0xe9, 0xf7, 0xec,
	0x93, 0x13, 0xc7, 0x60, 0xf3, 0x84, 0xc0, 0x26, 0xb5, 0xfa, 0x83, 0x2e, 0xb5, 0x12, 0x58, 0x81,
	0x6c, 0x41, 0xf9, 0x7c, 0x60, 0xa7, 0x44, 0x6b, 0x87, 0xe7, 0xfa, 0x5f, 0x19, 0x64, 0xbd, 0x05,
	0xe5, 0xb3, 0x2e, 0x3d, 0x6d, 0x9d, 0x38, 0x83, 0x56, 0xff, 0xdb, 0xda, 0x3d, 0xf2, 0x10, 0x76,
	0x5a, 0xed, 0x41, 0x97, 0x3a, 0x6d, 0x6a, 0xb5, 0x06, 0x76, 0xf7, 0x4c, 0x23, 0x72, 0x64, 0x13,
	0x40, 0x23, 0x70, 0x9d, 0x57, 0x3b, 0xb5, 0x22, 0x1a, 0x50, 0x38, 0xfc, 0xef, 0x1c, 0x94, 0x2c,
	0x21, 0x42, 0x91, 0x30, 0xd6, 0x02, 0x9d, 0x8e, 0x6d, 0x75, 0x6a, 0xf7, 0x66, 0xfb, 0x71, 0x9d,
	0x23, 0x8f, 0xa0, 0xde, 0x3d, 0x7e, 0x65, 0xb5, 0x07, 0xce, 0xf9, 0x19, 0xb5, 0xda, 0xdd, 0xb3,
	0xfe, 0x80, 0x9e, 0xb7, 0x07, 0xad, 0xe3, 0x13, 0xab, 0x96, 0x57, 0x58, 0xc5, 0xd6, 0xb1, 0xbe,
	0xb3, 0xda, 0xe7, 0xa8, 0x86, 0xf5, 0x5d, 0xdb, 0xea, 0xa9, 0xaf, 0x5a, 0x81, 0x3c, 0x80, 0x9a,
	0xd9, 0x6b, 0x9f, 0x39, 0xbd, 0x93, 0x56, 0xff, 0xb4, 0x55, 0x5b, 0x53, 0x87, 0xc7, 0x3d, 0xed,
	0xd6, 0x59, 0xdb, 0x3a, 0x39, 0xb1, 0x3a, 0xb5, 0x75, 0xf2, 0x11, 0xec, 0x2e, 0x1c, 0xe7, 0xeb,
	0x96, 0xad, 0x50, 0xf7, 0x95, 0x08, 0x7a, 0x7e, 0x36, 0xb0, 0x4f, 0x2d, 0xc7, 0x3a, 0x7b, 0xed,
	0xf4, 0xad, 0xc1, 0x79, 0x2f, 0xc1, 0x6e, 0x1c, 0xfe, 0x53, 0x0e, 0x36, 0xf5, 0x15, 0x58, 0xb7,
	0x7e, 0x84, 0x47, 0xda, 0x85, 0xed, 0xfe, 0xef, 0xfb, 0x03, 0xeb, 0xd4, 0xb1, 0x28, 0xed, 0x52,
	0xc7, 0xfa, 0xce, 0x1e, 0xd4, 0xee, 0x91, 0x6d, 0xa8, 0xda, 0x67, 0x03, 0xeb, 0xac, 0x63, 0x75,
	0x34, 0x08, 0xcf, 0x76, 0x7e, 0x76, 0xde, 0xb7, 0x3a, 0x0e, 0xb5, 0xfa, 0xdd, 0x73, 0xda, 0xb6,
	0x1c, 0x6a, 0x9d, 0x58, 0xad, 0xbe, 0xd5, 0xa9, 0xe5, 0xc9, 0xc7, 0xf0, 0xb0, 0x77, 0xd2, 0x6a,
	0x5b, 0xa7, 0xd6, 0xd9, 0xc0, 0xf9, 0x86, 0x76, 0xcf, 0x7b, 0x0e, 0xb5, 0x4e, 0xbb, 0xaf, 0xad,
	0x4e, 0xad, 0xa0, 0xec, 0x3f, 0x67, 0x79, 0x2d, 0xab, 0xb6, 0x46, 0xaa, 0x50, 0xb2, 0x3b, 0x27,
	0x96, 0x16, 0xb1, 0x7e, 0x78, 0x0a, 0xdb, 0x4b, 0x63, 0x35, 0xe5, 0x55, 0xbd, 0x56, 0xfb, 0x5b,
	0xed, 0x26, 0xfd, 0x1e, 0xb5, 0x5a, 0xca, 0xd2, 0x5b, 0x50, 0xee, 0x0f, 0xa8, 0xdd, 0x1e, 0x38,
	0x88, 0xcc, 0x2b, 0x8d, 0x0d, 0xc0, 0xd0, 0x14, 0x8e, 0x1b, 0x50, 0xf7, 0x43, 0x1d, 0x8d, 0x7a,
	0x24, 0x7d, 0x74, 0xc9, 0x03, 0xae, 0xd8, 0x7a, 0xc3, 0xfb, 0xf8, 0x2f, 0xff, 0xe7, 0x7f, 0x0a,
	0x00, 0x00, 0xff, 0xff, 0xe3, 0x58, 0x69, 0xbd, 0x06, 0x20, 0x00, 0x00,
}
