load("//java/tools/checkstyle:checkstyle.bzl", "checkstyle_test")
load("//bazel:ray.bzl", "flatbuffer_java_library")

java_binary(
    name = "bazel_deps",
    main_class = "com.github.johnynek.bazel_deps.ParseProject",
    runtime_deps = ["@bazel_deps//jar"],
)

java_import(
    name = "org_ray_ray_java_root",
    jars = [
        "liborg_ray_ray_api.jar",
        "liborg_ray_ray_api-src.jar",
        "liborg_ray_ray_runtime.jar",
        "liborg_ray_ray_runtime-src.jar",
        "liborg_ray_ray_runtime_test.jar",
        "liborg_ray_ray_runtime_test-src.jar",
        "liborg_ray_ray_test.jar",
        "liborg_ray_ray_test-src.jar",
        "org_ray_ray_tutorial_deploy.jar",
        "org_ray_ray_tutorial_deploy-src.jar",
        "AllTests_deploy.jar",
        "AllTests_deploy-src.jar",
    ],
    deps = [
        ":org_ray_ray_api",
        ":org_ray_ray_runtime",
        ":org_ray_ray_tutorial",
        ":org_ray_ray_test",
        ":org_ray_ray_runtime_test",
    ],
)

java_library(
    name = "org_ray_ray_api",
    srcs = glob(["api/src/main/java/**/*.java"]),
    deps = [
        "@mvnorg_slf4j_slf4j_log4j12//jar",
        "@mvnlog4j_log4j//jar",
        "@mvnjavax_xml_bind_jaxb_api//jar",
        "@mvncom_sun_xml_bind_jaxb_core//jar",
        "@mvncom_sun_xml_bind_jaxb_impl//jar",
    ],
)

checkstyle_test(
    name = "org_ray_ray_api-checkstyle",
    target = ":org_ray_ray_api",
    size = "small",
)

java_library(
    name = "org_ray_ray_runtime",
    srcs = glob([
        "runtime/src/main/java/**/*.java"
    ]) + [
        ":generate_java_gcs_fbs",
    ],
    resources = glob(["runtime/src/main/resources/**"]),
    visibility = ["//visibility:public"],
    data = ["//:raylet_library_java"],
    deps = [
        ":org_ray_ray_api",
        "@plasma//:org_apache_arrow_arrow_plasma",
        "@mvnorg_slf4j_slf4j_api//jar",
        #"@mvncom_google_code_gson_gson//jar",
        "@mvncom_fasterxml_jackson_core_jackson_core//jar",
        "@mvnorg_apache_commons_commons_pool2//jar",
        "@mvnorg_javassist_javassist//jar",
        "@mvnorg_objenesis_objenesis//jar",
        "@mvncom_typesafe_config//jar",
        "@mvnorg_apache_commons_commons_lang3//jar",
        "@mvnde_ruedigermoeller_fst//jar",
        "@mvncom_github_davidmoten_flatbuffers_java//jar",
        "@mvnredis_clients_jedis//jar",
        "@mvncommons_io_commons_io//jar",
        "@mvncom_google_guava_guava//jar",
        "@mvnnet_lingala_zip4j_zip4j//jar",
        "@mvnorg_slf4j_slf4j_log4j12//jar",
        "@mvnorg_ini4j_ini4j//jar",
        "@mvnorg_ow2_asm_asm//jar",
    ],
)

checkstyle_test(
    name = "org_ray_ray_runtime-checkstyle",
    target = ":org_ray_ray_runtime",
    size = "small",
)

java_binary(
    name = "org_ray_ray_tutorial",
    srcs = glob(["tutorial/src/main/java/**/*.java"]),
    resources = glob(["tutorial/src/main/resources/**"]),
    visibility = ["//visibility:public"],
    deps = [
        ":org_ray_ray_api",
        ":org_ray_ray_runtime",
        "@mvncom_google_guava_guava//jar",
    ],
)

checkstyle_test(
    name = "org_ray_ray_tutorial-checkstyle",
    target = ":org_ray_ray_tutorial",
    size = "small",
)

java_library(
    name = "org_ray_ray_test",
    srcs = glob(["test/src/main/java/**/*.java"]),
    deps = [
        ":org_ray_ray_api",
        ":org_ray_ray_runtime",
        "@mvnorg_apache_commons_commons_lang3//jar",
        "@mvnorg_slf4j_slf4j_api//jar",
        "@plasma//:org_apache_arrow_arrow_plasma",
        "@mvnorg_testng_testng//jar",
        "@mvncommons_collections_commons_collections//jar",
        "@mvncom_google_guava_guava//jar",
    ],
)

checkstyle_test(
    name = "org_ray_ray_test-checkstyle",
    target = ":org_ray_ray_test",
    size = "small",
)

java_library(
    name = "org_ray_ray_runtime_test",
    srcs = glob(["runtime/src/test/java/**/*.java"]),
    deps = [
        ":org_ray_ray_api",
        ":org_ray_ray_runtime",
        "@mvnorg_apache_commons_commons_lang3//jar",
        "@mvncom_beust_jcommander//jar",
        "@mvnorg_testng_testng//jar",
    ],
)

checkstyle_test(
    name = "org_ray_ray_runtime_test-checkstyle",
    target = ":org_ray_ray_runtime_test",
    size = "small",
)

exports_files(["testng.xml"])

java_binary(
    name = "AllTests",
    main_class = "org.testng.TestNG",
    data = ["testng.xml"],
    runtime_deps = [
        ":org_ray_ray_test",
        ":org_ray_ray_runtime_test",
    ],
)

genrule(
    name = "generate_java_gcs_fbs",
    srcs = [":java_gcs_fbs"],
    outs = [
        "runtime/src/main/java/org/ray/runtime/generated/ActorCheckpointData.java",
        "runtime/src/main/java/org/ray/runtime/generated/ActorCheckpointIdData.java",
        "runtime/src/main/java/org/ray/runtime/generated/ActorState.java",
        "runtime/src/main/java/org/ray/runtime/generated/ActorTableData.java",
        "runtime/src/main/java/org/ray/runtime/generated/Arg.java",
        "runtime/src/main/java/org/ray/runtime/generated/ClassTableData.java",
        "runtime/src/main/java/org/ray/runtime/generated/ClientTableData.java",
        "runtime/src/main/java/org/ray/runtime/generated/ConfigTableData.java",
        "runtime/src/main/java/org/ray/runtime/generated/CustomSerializerData.java",
        "runtime/src/main/java/org/ray/runtime/generated/DriverTableData.java",
        "runtime/src/main/java/org/ray/runtime/generated/ErrorTableData.java",
        "runtime/src/main/java/org/ray/runtime/generated/ErrorType.java",
        "runtime/src/main/java/org/ray/runtime/generated/FunctionTableData.java",
        "runtime/src/main/java/org/ray/runtime/generated/GcsTableEntry.java",
        "runtime/src/main/java/org/ray/runtime/generated/HeartbeatBatchTableData.java",
        "runtime/src/main/java/org/ray/runtime/generated/HeartbeatTableData.java",
        "runtime/src/main/java/org/ray/runtime/generated/Language.java",
        "runtime/src/main/java/org/ray/runtime/generated/ObjectTableData.java",
        "runtime/src/main/java/org/ray/runtime/generated/ProfileEvent.java",
        "runtime/src/main/java/org/ray/runtime/generated/ProfileTableData.java",
        "runtime/src/main/java/org/ray/runtime/generated/RayResource.java",
        "runtime/src/main/java/org/ray/runtime/generated/ResourcePair.java",
        "runtime/src/main/java/org/ray/runtime/generated/SchedulingState.java",
        "runtime/src/main/java/org/ray/runtime/generated/TablePrefix.java",
        "runtime/src/main/java/org/ray/runtime/generated/TablePubsub.java",
        "runtime/src/main/java/org/ray/runtime/generated/TaskInfo.java",
        "runtime/src/main/java/org/ray/runtime/generated/TaskLeaseData.java",
        "runtime/src/main/java/org/ray/runtime/generated/TaskReconstructionData.java",
        "runtime/src/main/java/org/ray/runtime/generated/TaskTableData.java",
        "runtime/src/main/java/org/ray/runtime/generated/TaskTableTestAndUpdate.java",
    ],
    cmd = """
        for f in $(locations //java:java_gcs_fbs); do
            chmod +w $$f
            cp -f $$f $(@D)/runtime/src/main/java/org/ray/runtime/generated
        done
        python $$(pwd)/java/modify_generated_java_flatbuffers_files.py $(@D)/..
    """,
    local = 1,
)

flatbuffer_java_library(
    name = "java_gcs_fbs",
    srcs = ["//:gcs_fbs_file"],
    outs = [
        "ActorCheckpointData.java",
        "ActorCheckpointIdData.java",
        "ActorState.java",
        "ActorTableData.java",
        "Arg.java",
        "ClassTableData.java",
        "ClientTableData.java",
        "ConfigTableData.java",
        "CustomSerializerData.java",
        "DriverTableData.java",
        "ErrorTableData.java",
        "ErrorType.java",
        "FunctionTableData.java",
        "GcsTableEntry.java",
        "HeartbeatBatchTableData.java",
        "HeartbeatTableData.java",
        "Language.java",
        "ObjectTableData.java",
        "ProfileEvent.java",
        "ProfileTableData.java",
        "RayResource.java",
        "ResourcePair.java",
        "SchedulingState.java",
        "TablePrefix.java",
        "TablePubsub.java",
        "TaskInfo.java",
        "TaskLeaseData.java",
        "TaskReconstructionData.java",
        "TaskTableData.java",
        "TaskTableTestAndUpdate.java",
    ],
    out_prefix = "runtime/src/main/java/org/ray/runtime/generated",
)
