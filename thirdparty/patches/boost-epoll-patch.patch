diff --git boost/asio/detail/impl/epoll_reactor.ipp boost/asio/detail/impl/epoll_reactor.ipp
index 651b2d70..a28d0b93 100644
--- boost/asio/detail/impl/epoll_reactor.ipp
+++ boost/asio/detail/impl/epoll_reactor.ipp
@@ -233,6 +233,7 @@ void epoll_reactor::start_op(int op_type, socket_type descriptor,
     epoll_reactor::per_descriptor_data& descriptor_data, reactor_op* op,
     bool is_continuation, bool allow_speculative)
 {
+  printf("enter epoll_reactor::start_op\n");
   if (!descriptor_data)
   {
     op->ec_ = boost::asio::error::bad_descriptor;
@@ -281,6 +282,7 @@ void epoll_reactor::start_op(int op_type, socket_type descriptor,
           epoll_event ev = { 0, { 0 } };
           ev.events = descriptor_data->registered_events_ | EPOLLOUT;
           ev.data.ptr = descriptor_data;
+          // printf("EPOLL_CTL_MOD 1: %d\n", epoll_fd_);
           if (epoll_ctl(epoll_fd_, EPOLL_CTL_MOD, descriptor, &ev) == 0)
           {
             descriptor_data->registered_events_ |= ev.events;
@@ -311,6 +313,7 @@ void epoll_reactor::start_op(int op_type, socket_type descriptor,
       epoll_event ev = { 0, { 0 } };
       ev.events = descriptor_data->registered_events_;
       ev.data.ptr = descriptor_data;
+      // printf("EPOLL_CTL_MOD 2: %d\n", epoll_fd_);
       epoll_ctl(epoll_fd_, EPOLL_CTL_MOD, descriptor, &ev);
     }
   }
@@ -570,6 +573,7 @@ void epoll_reactor::interrupt()
   epoll_event ev = { 0, { 0 } };
   ev.events = EPOLLIN | EPOLLERR | EPOLLET;
   ev.data.ptr = &interrupter_;
+  printf("EPOLL_CTL_MOD 3: %d\n", epoll_fd_);
   epoll_ctl(epoll_fd_, EPOLL_CTL_MOD, interrupter_.read_descriptor(), &ev);
 }

