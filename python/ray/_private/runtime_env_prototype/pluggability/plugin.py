from abc import ABC, abstractstaticmethod

from ray.util.annotations import DeveloperAPI
from ray._private.runtime_env.context import RuntimeEnvContext
from typing import List
from ray.core.generated.common_pb2 import Language


@DeveloperAPI
class RuntimeEnvPlugin(ABC):
    """The plugin classes are only loaded by runtime env agent.
    """
    NAME = None
    # A flag indicate that the runtime env is only used for one worker.
    PER_WORKER = False
    # A flag indicate that the runtime env is only used for one job.
    PER_JOB = False

    @abstractstaticmethod
    def validate(spec) -> List[str]:
        """Validate the specification of user input for this plugin.

            Args: 
                spec: The specification of user input for this plugin.
                      It could be a dict, list, str and so on.
                      For example, if the plugin is pip, the spec should
                      be a dict like:
                          ```
                          {
                              "packages" = {"requests"},
                          }
                          ```
            Returns:
                uris(List[str]): A list of uris.

        """
        raise NotImplementedError()

    @abstractstaticmethod
    def create(
        uris: List[str],
        spec,
        ctx: RuntimeEnvContext,
        job_id: str,
        worker_id: str,
        worker_language: Language,
    ) -> float:
        """Create and install the runtime environment.
            Args: 
                uris(List[str]): A list of uris which is generated by `validate`.
                spec: The specification of user input for this plugin.
                      It could be a dict, list, str and so on.
                      For example, if the plugin is pip, the spec should
                      be a dict like:
                          ```
                          {
                              "packages" = {"requests"},
                          }
                          ```
                ctx(RuntimeEnvContext): auxiliary information supplied by Ray.
                job_id(str): The job which will use this runtime env.
                worker_id(str): The worker which will use this runtime env.
                worker_language(Language): The worker language.

            Returns:

                disk_space(float): the disk space taken up by this plugin installation for this
                environment. e.g. for working_dir, this downloads the files to the
                local node.
        """
        return 0, False, False

    @abstractstaticmethod
    def delete(uris: List[str]) -> float:
        """Delete the the runtime environment given uri.

        Args:
            uri(List[str]): a list of URI uniquely describing this resource.
            ctx(RuntimeEnvContext): auxiliary information supplied by Ray.

        Returns:
            the amount of space reclaimed by the deletion.
        """
        return 0
