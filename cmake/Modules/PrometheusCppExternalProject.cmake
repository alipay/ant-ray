# Prometheus external project
# target:
#  - prometheus-cpp_ep
# defines:
#  - PROMETHEUS_CPP_HOME
#  - PROMETHEUS_CPP_INCLUDE_DIR
#  - PROMETHEUS_CPP_CORE_LIBRARY
#  - PROMETHEUS_CPP_PUSH_LIBRARY

if (DEFINED ENV{RAY_PROMETHEUS_CPP_HOME} AND EXISTS $ENV{RAY_PROMETHEUS_CPP_HOME})
  set(PROMETHEUS_CPP_USE_STATIC_LIBS ON)
  set(PROMETHEUS_CPP_HOME "$ENV{RAY_PROMETHEUS_CPP_HOME}")
  message(STATUS "Find PROMETHEUS_CPP_HOME: ${PROMETHEUS_CPP_HOME}")
  set(PROMETHEUS_CPP_INCLUDE_DIR ${PROMETHEUS_CPP_HOME}/include)
  set(PROMETHEUS_CPP_LIBRARY_DIR ${PROMETHEUS_CPP_HOME}/lib)
  set(PROMETHEUS_CPP_CORE_LIBRARY ${PROMETHEUS_CPP_LIBRARY_DIR}/libprometheus-cpp-core.a)
  set(PROMETHEUS_CPP_PUSH_LIBRARY ${PROMETHEUS_CPP_LIBRARY_DIR}/libprometheus-cpp-push.a)

  add_custom_target(prometheus-cpp_ep)
else()
  message(STATUS "Starting to build prometheus-cpp")
  set(PROMETHEUS_CPP_INSTALL_PREFIX ${CMAKE_CURRENT_BINARY_DIR}/external/prometheus-cpp-install)

  set(PROMETHEUS_CPP_INCLUDE_DIR ${PROMETHEUS_CPP_INSTALL_PREFIX}/include)
  set(PROMETHEUS_CPP_HOME ${PROMETHEUS_CPP_INSTALL_PREFIX})
  set(PROMETHEUS_CPP_LIBRARY_DIR ${PROMETHEUS_CPP_INSTALL_PREFIX}/lib)
  set(PROMETHEUS_CPP_CORE_LIBRARY ${PROMETHEUS_CPP_LIBRARY_DIR}/libprometheus-cpp-core.a)
  set(PROMETHEUS_CPP_PUSH_LIBRARY ${PROMETHEUS_CPP_LIBRARY_DIR}/libprometheus-cpp-push.a)

  # set(PROMETHEUS_CPP_VERSION "0.5.0")
  # set(PROMETHEUS_CPP_URL "https://github.com/jupp0r/prometheus-cpp/archive/v${PROMETHEUS_CPP_VERSION}.tar.gz")
  set(PROMETHEUS_CPP_URL "https://github.com/chuxi/prometheus-cpp/archive/trunk-0.5.1.tar.gz")
  set(PROMETHEUS_CPP_URL_MD5 12b8f3460ae7c5568e2f7b4843e60836)
  set(PROMETHEUS_CPP_CMAKE_CXX_FLAGS "${EP_CXX_FLAGS} -fPIC")

  set(PROMETHEUS_CPP_BUILD_PRODUCTS ${PROMETHEUS_CPP_CORE_LIBRARY} ${PROMETHEUS_CPP_PUSH_LIBRARY})

  set(PROMETHEUS_CPP_CMAKE_ARGS -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
    -DCMAKE_INSTALL_PREFIX=${PROMETHEUS_CPP_INSTALL_PREFIX}
    -DENABLE_TESTING=OFF
    -DENABLE_PULL=OFF
    -DUSE_THIRDPARTY_LIBRARIES=OFF
    -DCMAKE_FIND_ROOT_PATH=${CPR_HOME}
    -DCMAKE_CXX_FLAGS_${UPPERCASE_BUILD_TYPE}=${PROMETHEUS_CPP_CMAKE_CXX_FLAGS}
    -DCMAKE_C_FLAGS_${UPPERCASE_BUILD_TYPE}=${EP_C_FLAGS}
    -DCMAKE_CXX_FLAGS=${PROMETHEUS_CPP_CMAKE_CXX_FLAGS})

  ExternalProject_Add(prometheus-cpp_ep
    PREFIX external/prometheus-cpp
    DEPENDS cpr
    URL ${PROMETHEUS_CPP_URL}
    URL_MD5 ${PROMETHEUS_CPP_URL_MD5}
    BUILD_IN_SOURCE 1
    BUILD_BYPRODUCTS ${PROMETHEUS_CPP_BUILD_PRODUCTS}
    CMAKE_ARGS ${PROMETHEUS_CPP_CMAKE_ARGS})

endif ()
